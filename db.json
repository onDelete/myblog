{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/imgs/ali.png","path":"imgs/ali.png","modified":1,"renderable":0},{"_id":"source/imgs/weixin.png","path":"imgs/weixin.png","modified":1,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/LICENSE","path":"vendors/fastclick/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/README.md","path":"vendors/fastclick/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/bower.json","path":"vendors/fastclick/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/HELP-US-OUT.txt","path":"vendors/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/bower.json","path":"vendors/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/CONTRIBUTING.md","path":"vendors/jquery_lazyload/CONTRIBUTING.md","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/README.md","path":"vendors/jquery_lazyload/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/bower.json","path":"vendors/jquery_lazyload/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.scrollstop.js","path":"vendors/jquery_lazyload/jquery.scrollstop.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.lazyload.js","path":"vendors/jquery_lazyload/jquery.lazyload.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/velocity/bower.json","path":"vendors/velocity/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.min.js","path":"vendors/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.ui.min.js","path":"vendors/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.ui.js","path":"vendors/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/jquery/index.js","path":"vendors/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/blank.gif","path":"vendors/fancybox/source/blank.gif","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading.gif","path":"vendors/fancybox/source/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading@2x.gif","path":"vendors/fancybox/source/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_overlay.png","path":"vendors/fancybox/source/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite.png","path":"vendors/fancybox/source/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite@2x.png","path":"vendors/fancybox/source/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.css","path":"vendors/fancybox/source/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.js","path":"vendors/fancybox/source/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.pack.js","path":"vendors/fancybox/source/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.min.js","path":"vendors/fastclick/lib/fastclick.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.js","path":"vendors/fastclick/lib/fastclick.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css.map","path":"vendors/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css","path":"vendors/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.min.css","path":"vendors/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff2","path":"vendors/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.min.js","path":"vendors/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.pack.js","path":"vendors/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/FontAwesome.otf","path":"vendors/font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.eot","path":"vendors/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff","path":"vendors/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.js","path":"vendors/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/fancybox_buttons.png","path":"vendors/fancybox/source/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-media.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.ttf","path":"vendors/font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.svg","path":"vendors/font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1},{"_id":"source/imgs/flower.jpeg","path":"imgs/flower.jpeg","modified":1,"renderable":0}],"Cache":[{"_id":"themes/next/README.en.md","hash":"565ba52b3825b85a9f05b41183caca7f18b741d4","modified":1476934957117},{"_id":"themes/next/README.md","hash":"500b5606eb6a09c979d16128f8b00f4bf9bc95ac","modified":1476934957117},{"_id":"themes/next/_config.yml","hash":"8d0cdef84fff6d7154373ed0d1d20801610b81e4","modified":1476934956949},{"_id":"themes/next/bower.json","hash":"f89c6700a11d81e067cc97273ca6bf96cb88c8f9","modified":1476934956965},{"_id":"themes/next/gulpfile.coffee","hash":"26e5b1b945704c8bc78b928feede895c4c111c95","modified":1476934956965},{"_id":"themes/next/package.json","hash":"63e9c0f1dd9e5d7f51b4ae383981ef939a2ed45d","modified":1476934957117},{"_id":"source/about/index.md","hash":"a3a6cb4de6a90645fa4c0526ec3b368e8c0babac","modified":1476934956701},{"_id":"source/_posts/ExceptionBP.md","hash":"fff975431252d0a2e056ae23588b41a71ac23439","modified":1476934956605},{"_id":"source/_posts/arrayAnalysis.md","hash":"5843bd6a8f54f4c415cd47b497acf59af7d8b285","modified":1476934956573},{"_id":"source/_posts/configJavaEnvVar.md","hash":"49ad23291c2c94f0d9a79db53577d68a5bb9fbe9","modified":1476934956589},{"_id":"source/_posts/hexo常用操作.md","hash":"b419749389e9a74d6859e862a720697491ed3f42","modified":1476934956621},{"_id":"source/_posts/javaGC01.md","hash":"9fcac49650e067da6e782e40b22b77c2cb90be60","modified":1476934956633},{"_id":"source/_posts/mapIterator.md","hash":"a3d2b14fbf78ff2be0b175fdb5c038375c7d8421","modified":1476934956665},{"_id":"source/_posts/readLittlePrince.md","hash":"66571a9c4b8e289c3e82d0bc81b1f5e877b8239e","modified":1476934956669},{"_id":"source/_posts/sha1.md","hash":"228fbf4bd3c963dc8d1943a72ff23c0e84d6e540","modified":1476934956681},{"_id":"source/_posts/关于部署blog时重复输入用户名和密码的问题.md","hash":"3ede1548b514b10d9149f08f5da8cb99d26fc6db","modified":1476934956693},{"_id":"source/categories/index.md","hash":"bcef3fb3ca486e74972f628d4a49cef206a88b8c","modified":1476934956709},{"_id":"source/imgs/ali.png","hash":"718ce51ab24af6b9004b491d2b9171395f558431","modified":1476934956721},{"_id":"source/tags/index.md","hash":"9d417e38d80009225af83d0f32f9a39789e0460c","modified":1476934956825},{"_id":"themes/next/languages/de.yml","hash":"786afba25cfc98845a20d9901823ebeebcd1cbbf","modified":1476934957049},{"_id":"themes/next/languages/en.yml","hash":"f03799cbdb5a33064ead080bcac4baca1f6bc5f9","modified":1476934957057},{"_id":"themes/next/languages/default.yml","hash":"9db835c0543ade5a89bc80ec5a898203227cf3d8","modified":1476934957057},{"_id":"themes/next/languages/fr-FR.yml","hash":"1a084623c39de74301f3e92f9388a3a815a542ca","modified":1476934957057},{"_id":"themes/next/languages/id.yml","hash":"147c01e41b931085ad14250fa900c2249dcbbdd7","modified":1476934957057},{"_id":"themes/next/languages/ja.yml","hash":"a2c7b6301b5474aab798946fb700289df237c3cf","modified":1476934957057},{"_id":"themes/next/languages/ko.yml","hash":"ce8b047c89daae77c03482fc76f16ffec6bdbf2d","modified":1476934957057},{"_id":"themes/next/languages/pt-BR.yml","hash":"462aa865ca3d479bcf6b363cba61247b50f230ff","modified":1476934957061},{"_id":"themes/next/languages/pt.yml","hash":"ca239b39bf65c9462e59d51b12f0fe566d453197","modified":1476934957061},{"_id":"themes/next/languages/ru.yml","hash":"cc7b964a46587aea0e57b0a5269d8fd25570858e","modified":1476934957061},{"_id":"themes/next/languages/zh-Hans.yml","hash":"bea452bc49aed171a210d09bd6cddc4e846ea8ab","modified":1476934957061},{"_id":"themes/next/languages/zh-hk.yml","hash":"519ab3d817ec3bc5bfc91159c494b6b3c170bea7","modified":1476934957061},{"_id":"themes/next/languages/zh-tw.yml","hash":"6b1f345aaefc13e6723dc8a6741b59ac05c20dfd","modified":1476934957061},{"_id":"themes/next/layout/_layout.swig","hash":"74157f6cfd679ea11febec632542793f37c5e5d4","modified":1476934957061},{"_id":"themes/next/layout/archive.swig","hash":"b5b59d70fc1563f482fa07afd435752774ad5981","modified":1476934957113},{"_id":"themes/next/layout/category.swig","hash":"6422d196ceaff4220d54b8af770e7e957f3364ad","modified":1476934957113},{"_id":"themes/next/layout/index.swig","hash":"427d0b95b854e311ae363088ab39a393bf8fdc8b","modified":1476934957113},{"_id":"themes/next/layout/page.swig","hash":"8019d02232a6dd1a665b6a4d2daef8e5dd2f0049","modified":1476934957113},{"_id":"themes/next/layout/post.swig","hash":"e2e512142961ddfe77eba29eaa88f4a2ee43ae18","modified":1476934957117},{"_id":"themes/next/layout/tag.swig","hash":"07cf49c49c39a14dfbe9ce8e7d7eea3d4d0a4911","modified":1476934957117},{"_id":"themes/next/scripts/merge-configs.js","hash":"0c56be2e85c694247cfa327ea6d627b99ca265e8","modified":1476934957117},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1476934957317},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1476934957317},{"_id":"source/imgs/weixin.png","hash":"14f6489da547ec1df9941db880f2291e00349252","modified":1476934956813},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"43c3433155ccd9abcbe7dce2e6bfa1f3a66af18b","modified":1476934957061},{"_id":"themes/next/layout/_macro/post.swig","hash":"f3895bf44a9fb7c462f2e57b9a914703c2f152ba","modified":1476934957065},{"_id":"themes/next/layout/_macro/reward.swig","hash":"37e5b7c42ec17b9b6b786c5512bcc481a21c974e","modified":1476934957065},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"1a77843ce5eac62151dc3d38f0a36c43e19e1a74","modified":1476934957065},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"14e785adeb0e671ba0ff9a553e6f0d8def6c670c","modified":1476934957065},{"_id":"themes/next/layout/_partials/comments.swig","hash":"58fd826ca75b0cbc48b61a58da4b841e2fa34403","modified":1476934957065},{"_id":"themes/next/layout/_partials/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1476934957065},{"_id":"themes/next/layout/_partials/footer.swig","hash":"d6314764ba0316a4dc9beb282504c106858454fb","modified":1476934957081},{"_id":"themes/next/layout/_partials/head.swig","hash":"6b0c495b8154ef8b2d2cb0a554e164ff22cdc962","modified":1476934957085},{"_id":"themes/next/layout/_partials/header.swig","hash":"eb028685cb3c329537bbced06c063d23e6a33817","modified":1476934957085},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1476934957085},{"_id":"themes/next/layout/_partials/search.swig","hash":"011b9d6c9f0a2f4654908ea20b9391f9b7981271","modified":1476934957085},{"_id":"themes/next/layout/_scripts/baidu-push.swig","hash":"82d060fe055d6e423bbc9199f82dfe5c68e74779","modified":1476934957089},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1476934957089},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1476934957089},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"0b91cadecead8e0b5211cc42b085998d94af503a","modified":1476934957113},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1476934957121},{"_id":"themes/next/scripts/tags/full-image.js","hash":"3acce36db0feb11a982c6c799aa6b6b47df2827c","modified":1476934957121},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1476934957129},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1476934957217},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1476934957217},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1476934957217},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1476934957217},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1476934957221},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1476934957233},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1476934957233},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1476934957233},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1476934957233},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1476934957233},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1476934957233},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1476934957233},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1476934957237},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1476934957089},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1476934957089},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1476934957205},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1476934957205},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1476934957205},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1476934957213},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1476934957213},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1476934957085},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"ff5523d5dacaa77a55a24e50e6e6530c3b98bfad","modified":1476934957085},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1476934957085},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"c07f7b2f264e5215b8ed42d67e8cef2477558364","modified":1476934957085},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1476934957085},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"7ca5cb4daa58b3504e17f3e02975e794bc634658","modified":1476934957089},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1476934957089},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"63315fcf210799f894208c9f512737096df84962","modified":1476934957089},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1476934957089},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1476934957093},{"_id":"themes/next/layout/_scripts/third-party/analytics.swig","hash":"0a89c04055bade7baa5962f1d5aefe438d83a244","modified":1476934957109},{"_id":"themes/next/layout/_scripts/third-party/comments.swig","hash":"907b931d775d32405d02a25b3b0a3ac03bf804d0","modified":1476934957109},{"_id":"themes/next/layout/_scripts/third-party/lean-analytics.swig","hash":"92dc60821307fc9769bea9b2d60adaeb798342af","modified":1476934957109},{"_id":"themes/next/layout/_scripts/third-party/localsearch.swig","hash":"7f7148c8f52e4d3cfc070d964160362179fa8e91","modified":1476934957113},{"_id":"themes/next/layout/_scripts/third-party/mathjax.swig","hash":"5bafc33f57508d1d04a9930165240f6e9efa8d6d","modified":1476934957113},{"_id":"themes/next/layout/_scripts/third-party/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1476934957113},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1476934957205},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"715d5b40dc52f319fe4bff0325beb874774d9bd9","modified":1476934957205},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"78a83c38f69a8747bb74e420e6c9eeef1ea76525","modified":1476934957205},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"c8d35a6b9e3bff6d8fdb66de853065af9d37562d","modified":1476934957213},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"3ead77befa064d6327dc7afd0a5af7be59a5f196","modified":1476934957213},{"_id":"themes/next/source/css/_variables/base.styl","hash":"17624186f7a1f28daddea258d044f8e03b2f4bea","modified":1476934957213},{"_id":"themes/next/source/images/avatar.gif","hash":"3ddb9882caf0b0f833b795a6344e657e81ec0fec","modified":1476934957217},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1476934957249},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"39bf93769d9080fa01a9a875183b43198f79bc19","modified":1476934957249},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1476934957249},{"_id":"themes/next/source/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1476934957249},{"_id":"themes/next/source/js/src/post-details.js","hash":"2038f54e289b6da5def09689e69f623187147be5","modified":1476934957249},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1476934957253},{"_id":"themes/next/source/js/src/utils.js","hash":"e5cb720894c4bc28ca8f10b33df127fb394018d9","modified":1476934957253},{"_id":"themes/next/source/vendors/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1476934957265},{"_id":"themes/next/source/vendors/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1476934957265},{"_id":"themes/next/source/vendors/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1476934957265},{"_id":"themes/next/source/vendors/font-awesome/HELP-US-OUT.txt","hash":"69a4c537d167b68a0ccf1c6febd138aeffca60d6","modified":1476934957293},{"_id":"themes/next/source/vendors/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1476934957265},{"_id":"themes/next/source/vendors/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1476934957305},{"_id":"themes/next/source/vendors/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1476934957309},{"_id":"themes/next/source/vendors/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1476934957305},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1476934957305},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1476934957305},{"_id":"themes/next/source/vendors/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1476934957309},{"_id":"themes/next/source/vendors/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1476934957313},{"_id":"themes/next/source/vendors/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1476934957313},{"_id":"themes/next/source/vendors/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1476934957313},{"_id":"themes/next/source/vendors/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1476934957305},{"_id":"themes/next/layout/_scripts/third-party/analytics/baidu-analytics.swig","hash":"7c43d66da93cde65b473a7d6db2a86f9a42647d6","modified":1476934957105},{"_id":"themes/next/layout/_scripts/third-party/analytics/busuanzi-counter.swig","hash":"4fcbf57c4918528ab51d3d042cff92cf5aefb599","modified":1476934957109},{"_id":"themes/next/layout/_scripts/third-party/analytics/cnzz-analytics.swig","hash":"1e3e1c6231408e18e8485a8e0e59e8880349b210","modified":1476934957109},{"_id":"themes/next/layout/_scripts/third-party/analytics/facebook-sdk.swig","hash":"394d008e5e94575280407ad8a1607a028026cbc3","modified":1476934957109},{"_id":"themes/next/layout/_scripts/third-party/analytics/google-analytics.swig","hash":"30a23fa7e816496fdec0e932aa42e2d13098a9c2","modified":1476934957109},{"_id":"themes/next/layout/_scripts/third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1476934957109},{"_id":"themes/next/layout/_scripts/third-party/comments/disqus.swig","hash":"bff3b18f56175c53f3bc6d733166c4d998e08732","modified":1476934957109},{"_id":"themes/next/layout/_scripts/third-party/comments/duoshuo.swig","hash":"696666141cdd204fd8818ac2ad18f05e320f8587","modified":1476934957109},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"b49efc66bd055a2d0be7deabfcb02ee72a9a28c8","modified":1476934957137},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"0dfb4b3ba3180d7285e66f270e1d3fa0f132c3d2","modified":1476934957137},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1476934957137},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"10994990d6e0b4d965a728a22cf7f6ee29cae9f6","modified":1476934957141},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"711c8830886619d4f4a0598b0cde5499dce50c62","modified":1476934957153},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1476934957189},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1476934957201},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"5304f99581da3a31de3ecec959b7adf9002fde83","modified":1476934957205},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"54c90cf7bdbf5c596179d8dae6e671bad1292662","modified":1476934957205},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1476934957205},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"013619c472c7e4b08311c464fcbe9fcf5edde603","modified":1476934957205},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1476934957205},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1476934957205},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1476934957209},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1476934957209},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1476934957209},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"4303776991ef28f5742ca51c7dffe6f12f0acf34","modified":1476934957209},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1476934957209},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1476934957209},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1476934957209},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"6ed60cc621bac096c0ed7534fa25b1a52dc571d4","modified":1476934957209},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"c2c6c4f6434b4f94aac2af5861cd769427f0ee10","modified":1476934957209},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1476934957209},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1476934957209},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"be22ad34f546a07f6d56b424338cdd898683eea4","modified":1476934957213},{"_id":"themes/next/source/css/_schemes/Pisces/_full-image.styl","hash":"938d39eedc6e3d33918c1145a5bf1e79991d3fcf","modified":1476934957213},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"8d7cecde4933900c7df2db9d0a98f5f82f88dc93","modified":1476934957213},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"d09280e5b79f3b573edb30f30c7a5f03ac640986","modified":1476934957213},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"d4b7bd610ca03dbb2f5b66631c0e84a79fb4660b","modified":1476934957213},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1476934957213},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"1b10ba2d3ad0c063c418dc94a0b7e0db4b342c53","modified":1476934957213},{"_id":"themes/next/source/vendors/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1476934957257},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1476934957257},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1476934957257},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1476934957257},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1476934957257},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1476934957257},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1476934957261},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1476934957261},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1476934957261},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"7506e7490c69a200831393c38d25e91c156bd471","modified":1476934957253},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1476934957265},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1476934957265},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1476934957281},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css","hash":"3b87c2560832748cd06f9bfd2fd6ea8edbdae8c7","modified":1476934957281},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.min.css","hash":"05ea25bc9b3ac48993e1fee322d3bc94b49a6e22","modified":1476934957281},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff2","hash":"574ea2698c03ae9477db2ea3baf460ee32f1a7ea","modified":1476934957289},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1476934957309},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1476934957309},{"_id":"themes/next/source/vendors/font-awesome/fonts/FontAwesome.otf","hash":"0112e96f327d413938d37c1693806f468ffdbace","modified":1476934957289},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.eot","hash":"b3c2f08e73320135b69c23a3908b87a12053a2f6","modified":1476934957281},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff","hash":"507970402e328b2baeb05bde73bf9ded4e2c3a2d","modified":1476934957289},{"_id":"themes/next/source/vendors/velocity/velocity.js","hash":"e63dc7cea055ca60a95d286f32349d88b10c5a4d","modified":1476934957313},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"8994ffcce84deac0471532f270f97c44fea54dc0","modified":1476934957141},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1476934957141},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1476934957141},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"c890ce7fe933abad7baf39764a01894924854e92","modified":1476934957141},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1476934957141},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1476934957141},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"4da051c7f3924fa2db1e73c55b2baf1c2c150255","modified":1476934957145},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"90f8f9706cd7fe829cf06e9959a65fd3f8b994fa","modified":1476934957145},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"7778920dd105fa4de3a7ab206eeba30b1a7bac45","modified":1476934957153},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1476934957153},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"3c46efd6601e268093ce6d7b1471d18501878f0d","modified":1476934957153},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1476934957153},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"8fae54591877a73dff0b29b2be2e8935e3c63575","modified":1476934957165},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1476934957165},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"b25132fe6a7ad67059a2c3afc60feabb479bdd75","modified":1476934957169},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1476934957169},{"_id":"themes/next/source/css/_common/components/post/post-more-link.styl","hash":"15063d79b5befc21820baf05d6f20cc1c1787477","modified":1476934957177},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"d543d1377c1f61b70e3adb6da0eb12797552e5f2","modified":1476934957173},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"cbca4842a54950e2934b3b8f3cd940f122111aef","modified":1476934957181},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"e792c8dc41561c96d128e9b421187f1c3dc978a0","modified":1476934957181},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1476934957181},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"963105a531403d7aad6d9e5e23e3bfabb8ec065a","modified":1476934957181},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1476934957181},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"4eb18b12fa0ea6c35925d9a64f64e2a7dae8c7fd","modified":1476934957181},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"2e7ec9aaa3293941106b1bdd09055246aa3c3dc6","modified":1476934957181},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1476934957181},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"c44f6a553ec7ea5508f2054a13be33a62a15d3a9","modified":1476934957185},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1476934957185},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1476934957185},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"7690b9596ec3a49befbe529a5a2649abec0faf76","modified":1476934957185},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"2d3abbc85b979a648e0e579e45f16a6eba49d1e7","modified":1476934957185},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"234facd038f144bd0fe09a31ed1357c5d74c517f","modified":1476934957185},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1476934957185},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"618f73450cf541f88a4fddc3d22898aee49d105d","modified":1476934957189},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1476934957189},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1476934957189},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"8e66c2635d48e11de616bb29c4b1323698eebc0a","modified":1476934957189},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1476934957189},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"b03f891883446f3a5548b7cc90d29c77e62f1053","modified":1476934957189},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1476934957189},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1476934957189},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"3afc459442c132c480d1d832f1a872f1070bb048","modified":1476934957201},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"795d94561888d31cb7a6ff4a125596809ea69b7d","modified":1476934957193},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1476934957209},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"8b8e8cbce98a9296c8fd77f512ae85d945f65d40","modified":1476934957209},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"8b8e8cbce98a9296c8fd77f512ae85d945f65d40","modified":1476934957209},{"_id":"themes/next/source/vendors/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1476934957261},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1476934957261},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1476934957261},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1476934957261},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1476934957261},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1476934957261},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.ttf","hash":"27cf1f2ec59aece6938c7bb2feb0e287ea778ff9","modified":1476934957289},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.svg","hash":"2b3c8ba7008cc014d8fb37abc6f9f49aeda83824","modified":1476934957285},{"_id":"source/imgs/flower.jpeg","hash":"5b9708b61c20314cb2dde67c4940b528191188d9","modified":1476934956809}],"Category":[{"name":"JavaSE","_id":"ciuhsytc00004hlptyts1na7x"},{"name":"linux","_id":"ciuhsytda000ghlpttwe3gsde"},{"name":"博客构建","_id":"ciuhsytdn000nhlptbt6al1an"}],"Data":[],"Page":[{"title":"about","date":"2016-10-04T11:11:31.000Z","comments":0,"_content":"<img src=\"../imgs/flower.jpeg\" width=\"600\" height=\"450\"/>\n### **哪辆马车，载你而去，奔向远方**\n\n### **奔向远方，你去而不返，是哪辆马车**\n\n- - -\n** 我现在生活的地方，一如既往的阴天好像从未有过什么伤心事，一切都被浓浓雾霭掩盖。**\n\n*做自己想做的就好，没有什么比免费来的东西更昂贵。*\n\n","source":"about/index.md","raw":"---\ntitle: about\ndate: 2016-10-04 19:11:31\ncomments: false\n---\n<img src=\"../imgs/flower.jpeg\" width=\"600\" height=\"450\"/>\n### **哪辆马车，载你而去，奔向远方**\n\n### **奔向远方，你去而不返，是哪辆马车**\n\n- - -\n** 我现在生活的地方，一如既往的阴天好像从未有过什么伤心事，一切都被浓浓雾霭掩盖。**\n\n*做自己想做的就好，没有什么比免费来的东西更昂贵。*\n\n","updated":"2016-10-20T03:42:36.701Z","path":"about/index.html","layout":"page","_id":"ciuhsytb90000hlpteyo2as8j","content":"<p><img src=\"../imgs/flower.jpeg\" width=\"600\" height=\"450\"></p>\n<h3 id=\"哪辆马车，载你而去，奔向远方\"><a href=\"#哪辆马车，载你而去，奔向远方\" class=\"headerlink\" title=\"哪辆马车，载你而去，奔向远方\"></a><strong>哪辆马车，载你而去，奔向远方</strong></h3><h3 id=\"奔向远方，你去而不返，是哪辆马车\"><a href=\"#奔向远方，你去而不返，是哪辆马车\" class=\"headerlink\" title=\"奔向远方，你去而不返，是哪辆马车\"></a><strong>奔向远方，你去而不返，是哪辆马车</strong></h3><hr>\n<p><strong> 我现在生活的地方，一如既往的阴天好像从未有过什么伤心事，一切都被浓浓雾霭掩盖。</strong></p>\n<p><em>做自己想做的就好，没有什么比免费来的东西更昂贵。</em></p>\n","excerpt":"","more":"<p><img src=\"../imgs/flower.jpeg\" width=\"600\" height=\"450\"/></p>\n<h3 id=\"哪辆马车，载你而去，奔向远方\"><a href=\"#哪辆马车，载你而去，奔向远方\" class=\"headerlink\" title=\"哪辆马车，载你而去，奔向远方\"></a><strong>哪辆马车，载你而去，奔向远方</strong></h3><h3 id=\"奔向远方，你去而不返，是哪辆马车\"><a href=\"#奔向远方，你去而不返，是哪辆马车\" class=\"headerlink\" title=\"奔向远方，你去而不返，是哪辆马车\"></a><strong>奔向远方，你去而不返，是哪辆马车</strong></h3><hr>\n<p><strong> 我现在生活的地方，一如既往的阴天好像从未有过什么伤心事，一切都被浓浓雾霭掩盖。</strong></p>\n<p><em>做自己想做的就好，没有什么比免费来的东西更昂贵。</em></p>\n"},{"title":"categories","date":"2016-10-03T12:03:55.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2016-10-03 20:03:55\ntype: \"categories\"\ncomments: false\n---\n","updated":"2016-10-20T03:42:36.709Z","path":"categories/index.html","layout":"page","_id":"ciuhsytbr0002hlpt9vhmmo8b","content":"","excerpt":"","more":""},{"title":"tags","date":"2016-10-03T11:59:39.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2016-10-03 19:59:39\ntype: \"tags\"\ncomments: false\n---\n","updated":"2016-10-20T03:42:36.825Z","path":"tags/index.html","layout":"page","_id":"ciuhsytc90006hlpt489ksd85","content":"","excerpt":"","more":""}],"Post":[{"title":"异常和try...catch...finally最佳实践","date":"2016-10-09T20:26:20.000Z","_content":"有关异常的几点总结：\n<!--more-->\n1.Throwable是Exception和Error的父类，我们能够处理的只有Exception类，一般不要使用Throwable。\n2.Exception定义的异常必须被处理，RuntimeException可以选择性地处理。RuntimeException包含有算术异常、空指针异常、类型转换异常等。\n3.try...catch...finally使用的标准格式：\n```java\npublic class ExceptionStanfordStyle {\n\n\t//在定义方法时throws异常，我们必须使用try...catch来处理异常，在处理时将异常throw到调用处，让调用处进行处理。\n\tpublic static void div(int a,int b) throws Exception{\n\t\tint result = 0;\n\t\tSystem.out.println(\"除法计算开始\");\n\t\ttry {\n\t\t\tresult = a / b;\n\t\t} catch (Exception e) {\n\t\t\tthrow e;\n\t\t} finally {\n\t\t\tSystem.out.println(\"除法计算结束\");\n\t\t}\n\t}\n\n\tpublic static void main(String[] args) {\n\t\ttry {\n\t\t\tExceptionStanfordStyle.div(10, 0);\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n```\n4.finally不被调用的情况\n* 使用System.exit();\n* 其他线程干扰了当前线程（通过interrupt方法）;\n* jvm崩溃（crash）;","source":"_posts/ExceptionBP.md","raw":"---\ntitle: 异常和try...catch...finally最佳实践\ndate: 2016-10-10 04:26:20\ntags: [Exception]\ncategories: JavaSE\n---\n有关异常的几点总结：\n<!--more-->\n1.Throwable是Exception和Error的父类，我们能够处理的只有Exception类，一般不要使用Throwable。\n2.Exception定义的异常必须被处理，RuntimeException可以选择性地处理。RuntimeException包含有算术异常、空指针异常、类型转换异常等。\n3.try...catch...finally使用的标准格式：\n```java\npublic class ExceptionStanfordStyle {\n\n\t//在定义方法时throws异常，我们必须使用try...catch来处理异常，在处理时将异常throw到调用处，让调用处进行处理。\n\tpublic static void div(int a,int b) throws Exception{\n\t\tint result = 0;\n\t\tSystem.out.println(\"除法计算开始\");\n\t\ttry {\n\t\t\tresult = a / b;\n\t\t} catch (Exception e) {\n\t\t\tthrow e;\n\t\t} finally {\n\t\t\tSystem.out.println(\"除法计算结束\");\n\t\t}\n\t}\n\n\tpublic static void main(String[] args) {\n\t\ttry {\n\t\t\tExceptionStanfordStyle.div(10, 0);\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n```\n4.finally不被调用的情况\n* 使用System.exit();\n* 其他线程干扰了当前线程（通过interrupt方法）;\n* jvm崩溃（crash）;","slug":"ExceptionBP","published":1,"updated":"2016-10-20T03:42:36.605Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciuhsytbg0001hlpta32eiot9","content":"<p>有关异常的几点总结：<br><a id=\"more\"></a><br>1.Throwable是Exception和Error的父类，我们能够处理的只有Exception类，一般不要使用Throwable。<br>2.Exception定义的异常必须被处理，RuntimeException可以选择性地处理。RuntimeException包含有算术异常、空指针异常、类型转换异常等。<br>3.try…catch…finally使用的标准格式：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ExceptionStanfordStyle</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">//在定义方法时throws异常，我们必须使用try...catch来处理异常，在处理时将异常throw到调用处，让调用处进行处理。</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">div</span><span class=\"params\">(<span class=\"keyword\">int</span> a,<span class=\"keyword\">int</span> b)</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> result = <span class=\"number\">0</span>;</div><div class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"除法计算开始\"</span>);</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\tresult = a / b;</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">throw</span> e;</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">\"除法计算结束\"</span>);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\tExceptionStanfordStyle.div(<span class=\"number\">10</span>, <span class=\"number\">0</span>);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\t\te.printStackTrace();</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>4.finally不被调用的情况</p>\n<ul>\n<li>使用System.exit();</li>\n<li>其他线程干扰了当前线程（通过interrupt方法）;</li>\n<li>jvm崩溃（crash）;</li>\n</ul>\n","excerpt":"<p>有关异常的几点总结：<br>","more":"<br>1.Throwable是Exception和Error的父类，我们能够处理的只有Exception类，一般不要使用Throwable。<br>2.Exception定义的异常必须被处理，RuntimeException可以选择性地处理。RuntimeException包含有算术异常、空指针异常、类型转换异常等。<br>3.try…catch…finally使用的标准格式：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ExceptionStanfordStyle</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">//在定义方法时throws异常，我们必须使用try...catch来处理异常，在处理时将异常throw到调用处，让调用处进行处理。</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">div</span><span class=\"params\">(<span class=\"keyword\">int</span> a,<span class=\"keyword\">int</span> b)</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> result = <span class=\"number\">0</span>;</div><div class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"除法计算开始\"</span>);</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\tresult = a / b;</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">throw</span> e;</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">\"除法计算结束\"</span>);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\tExceptionStanfordStyle.div(<span class=\"number\">10</span>, <span class=\"number\">0</span>);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\t\te.printStackTrace();</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>4.finally不被调用的情况</p>\n<ul>\n<li>使用System.exit();</li>\n<li>其他线程干扰了当前线程（通过interrupt方法）;</li>\n<li>jvm崩溃（crash）;</li>\n</ul>"},{"title":"数组分析","date":"2016-10-11T18:31:37.000Z","_content":"### 学习了一段时间的数组，下面结合书本内容对其做一个较为深入的总结。\n<!--more-->\n1.数组的初始化方式有两种：静态初始化、动态初始化。不管采用哪种初始化的方式，初始化完成后数组的长度保持不变。数组是一个对象，故访问其长度时有属性length。动态初始化时没有为数组指定元素，则数组会根据定义的类型对其进行默认初始化。\n* byte、short、int、long －－> 0\n* float、double －－> 0.0\n* char －－> '\\u0000'\n* boolean －－> false\n* class、interface、array －－> null\n\n对一个对象实例的初始化也遵循以上原则。\n2.引用类型数组中，每个数组变量储存的是对象的地址。假如我们创建一个Object[]数组，我们可以借此构建一个多维数组，只要将每个Object[index]元素引用另外的Object[]数组...依次循环下去就可以实现多维数组。\n3.数组'[]'之前的结构即为该数组的类型，比如：int[][]的类型就是int[]。\n4.数组的初始化其实是对数组对象的初始化，而不是数组变量的初始化。一个数组变量可以指向类型一致的所有数组对象。扩展之：java程序中的引用变量都不需初始化，需要初始化的是该变量所引用的对象。\n\n其他内容：当通过引用变量来访问一个实例属性，或者访问一个非静态的方法时，如果该引用变量还未指向一个有效的对象，就会出现空指针异常。\n\n\n\n","source":"_posts/arrayAnalysis.md","raw":"---\ntitle: 数组分析\ndate: 2016-10-12 02:31:37\ntags: array\ncategories: JavaSE\n---\n### 学习了一段时间的数组，下面结合书本内容对其做一个较为深入的总结。\n<!--more-->\n1.数组的初始化方式有两种：静态初始化、动态初始化。不管采用哪种初始化的方式，初始化完成后数组的长度保持不变。数组是一个对象，故访问其长度时有属性length。动态初始化时没有为数组指定元素，则数组会根据定义的类型对其进行默认初始化。\n* byte、short、int、long －－> 0\n* float、double －－> 0.0\n* char －－> '\\u0000'\n* boolean －－> false\n* class、interface、array －－> null\n\n对一个对象实例的初始化也遵循以上原则。\n2.引用类型数组中，每个数组变量储存的是对象的地址。假如我们创建一个Object[]数组，我们可以借此构建一个多维数组，只要将每个Object[index]元素引用另外的Object[]数组...依次循环下去就可以实现多维数组。\n3.数组'[]'之前的结构即为该数组的类型，比如：int[][]的类型就是int[]。\n4.数组的初始化其实是对数组对象的初始化，而不是数组变量的初始化。一个数组变量可以指向类型一致的所有数组对象。扩展之：java程序中的引用变量都不需初始化，需要初始化的是该变量所引用的对象。\n\n其他内容：当通过引用变量来访问一个实例属性，或者访问一个非静态的方法时，如果该引用变量还未指向一个有效的对象，就会出现空指针异常。\n\n\n\n","slug":"arrayAnalysis","published":1,"updated":"2016-10-20T03:42:36.573Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciuhsytbt0003hlptcslnlp49","content":"<h3 id=\"学习了一段时间的数组，下面结合书本内容对其做一个较为深入的总结。\"><a href=\"#学习了一段时间的数组，下面结合书本内容对其做一个较为深入的总结。\" class=\"headerlink\" title=\"学习了一段时间的数组，下面结合书本内容对其做一个较为深入的总结。\"></a>学习了一段时间的数组，下面结合书本内容对其做一个较为深入的总结。</h3><a id=\"more\"></a>\n<p>1.数组的初始化方式有两种：静态初始化、动态初始化。不管采用哪种初始化的方式，初始化完成后数组的长度保持不变。数组是一个对象，故访问其长度时有属性length。动态初始化时没有为数组指定元素，则数组会根据定义的类型对其进行默认初始化。</p>\n<ul>\n<li>byte、short、int、long －－&gt; 0</li>\n<li>float、double －－&gt; 0.0</li>\n<li>char －－&gt; ‘\\u0000’</li>\n<li>boolean －－&gt; false</li>\n<li>class、interface、array －－&gt; null</li>\n</ul>\n<p>对一个对象实例的初始化也遵循以上原则。<br>2.引用类型数组中，每个数组变量储存的是对象的地址。假如我们创建一个Object[]数组，我们可以借此构建一个多维数组，只要将每个Object[index]元素引用另外的Object[]数组…依次循环下去就可以实现多维数组。<br>3.数组’[]’之前的结构即为该数组的类型，比如：int[][]的类型就是int[]。<br>4.数组的初始化其实是对数组对象的初始化，而不是数组变量的初始化。一个数组变量可以指向类型一致的所有数组对象。扩展之：java程序中的引用变量都不需初始化，需要初始化的是该变量所引用的对象。</p>\n<p>其他内容：当通过引用变量来访问一个实例属性，或者访问一个非静态的方法时，如果该引用变量还未指向一个有效的对象，就会出现空指针异常。</p>\n","excerpt":"<h3 id=\"学习了一段时间的数组，下面结合书本内容对其做一个较为深入的总结。\"><a href=\"#学习了一段时间的数组，下面结合书本内容对其做一个较为深入的总结。\" class=\"headerlink\" title=\"学习了一段时间的数组，下面结合书本内容对其做一个较为深入的总结。\"></a>学习了一段时间的数组，下面结合书本内容对其做一个较为深入的总结。</h3>","more":"<p>1.数组的初始化方式有两种：静态初始化、动态初始化。不管采用哪种初始化的方式，初始化完成后数组的长度保持不变。数组是一个对象，故访问其长度时有属性length。动态初始化时没有为数组指定元素，则数组会根据定义的类型对其进行默认初始化。</p>\n<ul>\n<li>byte、short、int、long －－&gt; 0</li>\n<li>float、double －－&gt; 0.0</li>\n<li>char －－&gt; ‘\\u0000’</li>\n<li>boolean －－&gt; false</li>\n<li>class、interface、array －－&gt; null</li>\n</ul>\n<p>对一个对象实例的初始化也遵循以上原则。<br>2.引用类型数组中，每个数组变量储存的是对象的地址。假如我们创建一个Object[]数组，我们可以借此构建一个多维数组，只要将每个Object[index]元素引用另外的Object[]数组…依次循环下去就可以实现多维数组。<br>3.数组’[]’之前的结构即为该数组的类型，比如：int[][]的类型就是int[]。<br>4.数组的初始化其实是对数组对象的初始化，而不是数组变量的初始化。一个数组变量可以指向类型一致的所有数组对象。扩展之：java程序中的引用变量都不需初始化，需要初始化的是该变量所引用的对象。</p>\n<p>其他内容：当通过引用变量来访问一个实例属性，或者访问一个非静态的方法时，如果该引用变量还未指向一个有效的对象，就会出现空指针异常。</p>"},{"title":"配置java环境变量","date":"2016-10-06T04:51:22.000Z","_content":"## Linux下的java环境变量的配置\n在windows下操作，由于有图形化界面的帮助，环境变量的配置很人性化，尤其是在win10以后，环境变量的配置甚至都不需要在原来的特别长的path变量中添加“;“，简单几步即可完成。当我第一次使用ubuntu时，想在其中安装个java，配置环境变量都无从下手，linux下学习安装软件是一个比较复杂的过程，有很多依赖关系需要搞明白，但是当学习一段时间之后，发现在命令行下的操作也是相当方便的。\n<!--more-->\n**linux下java环境变量的配置**\n1.去oracle官网上下载相应的jdk的包，Ubuntu下对应的下载.tar.gz的包，将其解压，解压可以直接使用Ubuntu的图形化界面工具进行操作也可以使用命令行，然后将其移动到指定的文件夹下。\n`sudo mkdir /usr/local/java`\n`sudo tar -zxvf yourJDKDirName -C /usr/local/java/`\n2.配置环境变量\n`sudo vim ~/.bashrc`\n`export JAVA_HOME=/usr/local/java/jdk-...`\n`export JRE_HOME=${JAVA_HOME}/jre`\n`export CLASSPATH=.:${JAVA_HOME}/lib:${JRE_HOME}/lib`\n`export PATH=${JAVA_HOME}/bin:$PATH`\n这里在配置时也可以使用其它文本编辑器，也可以学习一些vim的简单操作。\n3.`source /etc/profile`\n4.测试\n在终端输入：`java` `javac`\n\n至此环境变量就配置好了。\n","source":"_posts/configJavaEnvVar.md","raw":"---\ntitle: 配置java环境变量\ndate: 2016-10-06 12:51:22\ntags: java环境变量\ncategories: linux\n---\n## Linux下的java环境变量的配置\n在windows下操作，由于有图形化界面的帮助，环境变量的配置很人性化，尤其是在win10以后，环境变量的配置甚至都不需要在原来的特别长的path变量中添加“;“，简单几步即可完成。当我第一次使用ubuntu时，想在其中安装个java，配置环境变量都无从下手，linux下学习安装软件是一个比较复杂的过程，有很多依赖关系需要搞明白，但是当学习一段时间之后，发现在命令行下的操作也是相当方便的。\n<!--more-->\n**linux下java环境变量的配置**\n1.去oracle官网上下载相应的jdk的包，Ubuntu下对应的下载.tar.gz的包，将其解压，解压可以直接使用Ubuntu的图形化界面工具进行操作也可以使用命令行，然后将其移动到指定的文件夹下。\n`sudo mkdir /usr/local/java`\n`sudo tar -zxvf yourJDKDirName -C /usr/local/java/`\n2.配置环境变量\n`sudo vim ~/.bashrc`\n`export JAVA_HOME=/usr/local/java/jdk-...`\n`export JRE_HOME=${JAVA_HOME}/jre`\n`export CLASSPATH=.:${JAVA_HOME}/lib:${JRE_HOME}/lib`\n`export PATH=${JAVA_HOME}/bin:$PATH`\n这里在配置时也可以使用其它文本编辑器，也可以学习一些vim的简单操作。\n3.`source /etc/profile`\n4.测试\n在终端输入：`java` `javac`\n\n至此环境变量就配置好了。\n","slug":"configJavaEnvVar","published":1,"updated":"2016-10-20T03:42:36.589Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciuhsytco0007hlpt4ij3r3mk","content":"<h2 id=\"Linux下的java环境变量的配置\"><a href=\"#Linux下的java环境变量的配置\" class=\"headerlink\" title=\"Linux下的java环境变量的配置\"></a>Linux下的java环境变量的配置</h2><p>在windows下操作，由于有图形化界面的帮助，环境变量的配置很人性化，尤其是在win10以后，环境变量的配置甚至都不需要在原来的特别长的path变量中添加“;“，简单几步即可完成。当我第一次使用ubuntu时，想在其中安装个java，配置环境变量都无从下手，linux下学习安装软件是一个比较复杂的过程，有很多依赖关系需要搞明白，但是当学习一段时间之后，发现在命令行下的操作也是相当方便的。<br><a id=\"more\"></a><br><strong>linux下java环境变量的配置</strong><br>1.去oracle官网上下载相应的jdk的包，Ubuntu下对应的下载.tar.gz的包，将其解压，解压可以直接使用Ubuntu的图形化界面工具进行操作也可以使用命令行，然后将其移动到指定的文件夹下。<br><code>sudo mkdir /usr/local/java</code><br><code>sudo tar -zxvf yourJDKDirName -C /usr/local/java/</code><br>2.配置环境变量<br><code>sudo vim ~/.bashrc</code><br><code>export JAVA_HOME=/usr/local/java/jdk-...</code><br><code>export JRE_HOME=${JAVA_HOME}/jre</code><br><code>export CLASSPATH=.:${JAVA_HOME}/lib:${JRE_HOME}/lib</code><br><code>export PATH=${JAVA_HOME}/bin:$PATH</code><br>这里在配置时也可以使用其它文本编辑器，也可以学习一些vim的简单操作。<br>3.<code>source /etc/profile</code><br>4.测试<br>在终端输入：<code>java</code> <code>javac</code></p>\n<p>至此环境变量就配置好了。</p>\n","excerpt":"<h2 id=\"Linux下的java环境变量的配置\"><a href=\"#Linux下的java环境变量的配置\" class=\"headerlink\" title=\"Linux下的java环境变量的配置\"></a>Linux下的java环境变量的配置</h2><p>在windows下操作，由于有图形化界面的帮助，环境变量的配置很人性化，尤其是在win10以后，环境变量的配置甚至都不需要在原来的特别长的path变量中添加“;“，简单几步即可完成。当我第一次使用ubuntu时，想在其中安装个java，配置环境变量都无从下手，linux下学习安装软件是一个比较复杂的过程，有很多依赖关系需要搞明白，但是当学习一段时间之后，发现在命令行下的操作也是相当方便的。<br>","more":"<br><strong>linux下java环境变量的配置</strong><br>1.去oracle官网上下载相应的jdk的包，Ubuntu下对应的下载.tar.gz的包，将其解压，解压可以直接使用Ubuntu的图形化界面工具进行操作也可以使用命令行，然后将其移动到指定的文件夹下。<br><code>sudo mkdir /usr/local/java</code><br><code>sudo tar -zxvf yourJDKDirName -C /usr/local/java/</code><br>2.配置环境变量<br><code>sudo vim ~/.bashrc</code><br><code>export JAVA_HOME=/usr/local/java/jdk-...</code><br><code>export JRE_HOME=${JAVA_HOME}/jre</code><br><code>export CLASSPATH=.:${JAVA_HOME}/lib:${JRE_HOME}/lib</code><br><code>export PATH=${JAVA_HOME}/bin:$PATH</code><br>这里在配置时也可以使用其它文本编辑器，也可以学习一些vim的简单操作。<br>3.<code>source /etc/profile</code><br>4.测试<br>在终端输入：<code>java</code> <code>javac</code></p>\n<p>至此环境变量就配置好了。</p>"},{"title":"Use Hexo","date":"2016-10-05T04:25:08.000Z","_content":"以下试用ubuntu下利用github pages搭建hexo博客，windows下流程与此类似，可以作参考。\n## 环境搭建\n* ### git\n首先需要在系统中安装git：`sudo apt install git`\n可以先检查是否安装git：`git --version`\n<!--more-->\n然后是对git的一些基本配置：\n`git config --global user.name \"username\"`\n`git config --global user.email \"youremail\"`\n对于使用hexo你不需要太多的git技巧，还有要用到的git命令：\n`git clone repo_url`（这里的仓库地址有两种形式，一种是https，一种是ssh，推荐使用ssh，ssh的速度更快，并且避免了重复验证用户名和密码的麻烦）\n这里推荐<a href=\"http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000\">廖雪峰的git教程</a>\n\n* ### nodejs\n安装：`sudo apt install nodejs`\n还需安装npm(nodejs的包管理工具)：`sudo apt insatll npm`\n上面两个在windows下可以直接绑定安装\nnpm管理工具的使用：\n升级新版npm：`sudo npm install npm -g`\n使用npm安装模块：`npm install module_name`\n**安装hexo包：`npm install hexo-cli -g`**\n查看所有全局安装的npm模块：`npm ls -g`\n模块的卸载：`npm uninstall module_name`\n更新模块：`npm update module_name`\n但是使用npm安装模块时速度太慢，可以使用淘宝镜像或者请科学上网。<a href=\"https://github.com/getlantern/lantern\">lantern</a>\n* ### github\n1.注册一个github账户，成为轮子哥口中所谓的（re）poer。\n2.打开个人的profile，点击右上角的**+**，new一个repository（新建一个仓库），注意，要将你的repository name设置为[username.github.io]，这一步很重要。然后其它的不用管，直接create repository。\n3.配置ssh keys，在settings中打开SSH and GPG keys，new一个ssh key。在下面的输入框中填写的你本机的ssh公钥，使用`ssh-keygen -t rsa -C \"youremail\"`，在你的用户目录下找到.ssh目录中的id_rsa.pub的内容，也就是你本机ssh公钥，然后点击添加。可以使用`cat id_rsa.pub`查看其中的内容。\n4.验证：`ssh -T git@github.com`，看到successfully就说明配置完成了。\n\n\n## 常用指令\n\n* **新建博客项目，默认为指定的folder文件夹;**\n`hexo init [folder]`\n* **新建文章，总共有post、draft、page三种layout，文章以你指定的title名创建，title中如果有空格请使用“”括起来;**\n`hexo new [layout] <title>`\n* **生成静态文件，下面的代码为简写，可以添加-w参数监视文件的变动;**\n`hexo generate`\n`hexo g`\n* **启动本地服务器，可以添加参数-p指定服务器的端口，默认在端口4000**\n`hexo server`\n`hexo s`\n* **博客项目部署**\n`hexo deploy`\n`hexo d`\n* **一键静态文件生成与部署**\n`hexo g -d`\n`hexo d -g`\n* **清楚缓存和生成的静态文件，对应于db.json和public目录下的文件**\n`hexo clean`\n`hexo cl`\n* **列出博客文件树**\n`hexo list route`","source":"_posts/hexo常用操作.md","raw":"---\ntitle: Use Hexo\ndate: 2016-10-05 12:25:08\ntags: hexo\ncategories: 博客构建\n---\n以下试用ubuntu下利用github pages搭建hexo博客，windows下流程与此类似，可以作参考。\n## 环境搭建\n* ### git\n首先需要在系统中安装git：`sudo apt install git`\n可以先检查是否安装git：`git --version`\n<!--more-->\n然后是对git的一些基本配置：\n`git config --global user.name \"username\"`\n`git config --global user.email \"youremail\"`\n对于使用hexo你不需要太多的git技巧，还有要用到的git命令：\n`git clone repo_url`（这里的仓库地址有两种形式，一种是https，一种是ssh，推荐使用ssh，ssh的速度更快，并且避免了重复验证用户名和密码的麻烦）\n这里推荐<a href=\"http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000\">廖雪峰的git教程</a>\n\n* ### nodejs\n安装：`sudo apt install nodejs`\n还需安装npm(nodejs的包管理工具)：`sudo apt insatll npm`\n上面两个在windows下可以直接绑定安装\nnpm管理工具的使用：\n升级新版npm：`sudo npm install npm -g`\n使用npm安装模块：`npm install module_name`\n**安装hexo包：`npm install hexo-cli -g`**\n查看所有全局安装的npm模块：`npm ls -g`\n模块的卸载：`npm uninstall module_name`\n更新模块：`npm update module_name`\n但是使用npm安装模块时速度太慢，可以使用淘宝镜像或者请科学上网。<a href=\"https://github.com/getlantern/lantern\">lantern</a>\n* ### github\n1.注册一个github账户，成为轮子哥口中所谓的（re）poer。\n2.打开个人的profile，点击右上角的**+**，new一个repository（新建一个仓库），注意，要将你的repository name设置为[username.github.io]，这一步很重要。然后其它的不用管，直接create repository。\n3.配置ssh keys，在settings中打开SSH and GPG keys，new一个ssh key。在下面的输入框中填写的你本机的ssh公钥，使用`ssh-keygen -t rsa -C \"youremail\"`，在你的用户目录下找到.ssh目录中的id_rsa.pub的内容，也就是你本机ssh公钥，然后点击添加。可以使用`cat id_rsa.pub`查看其中的内容。\n4.验证：`ssh -T git@github.com`，看到successfully就说明配置完成了。\n\n\n## 常用指令\n\n* **新建博客项目，默认为指定的folder文件夹;**\n`hexo init [folder]`\n* **新建文章，总共有post、draft、page三种layout，文章以你指定的title名创建，title中如果有空格请使用“”括起来;**\n`hexo new [layout] <title>`\n* **生成静态文件，下面的代码为简写，可以添加-w参数监视文件的变动;**\n`hexo generate`\n`hexo g`\n* **启动本地服务器，可以添加参数-p指定服务器的端口，默认在端口4000**\n`hexo server`\n`hexo s`\n* **博客项目部署**\n`hexo deploy`\n`hexo d`\n* **一键静态文件生成与部署**\n`hexo g -d`\n`hexo d -g`\n* **清楚缓存和生成的静态文件，对应于db.json和public目录下的文件**\n`hexo clean`\n`hexo cl`\n* **列出博客文件树**\n`hexo list route`","slug":"hexo常用操作","published":1,"updated":"2016-10-20T03:42:36.621Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciuhsytcr0008hlpt9idjtx3y","content":"<p>以下试用ubuntu下利用github pages搭建hexo博客，windows下流程与此类似，可以作参考。</p>\n<h2 id=\"环境搭建\"><a href=\"#环境搭建\" class=\"headerlink\" title=\"环境搭建\"></a>环境搭建</h2><ul>\n<li><h3 id=\"git\"><a href=\"#git\" class=\"headerlink\" title=\"git\"></a>git</h3><p>首先需要在系统中安装git：<code>sudo apt install git</code><br>可以先检查是否安装git：<code>git --version</code></p>\n<a id=\"more\"></a>\n<p>然后是对git的一些基本配置：<br><code>git config --global user.name &quot;username&quot;</code><br><code>git config --global user.email &quot;youremail&quot;</code><br>对于使用hexo你不需要太多的git技巧，还有要用到的git命令：<br><code>git clone repo_url</code>（这里的仓库地址有两种形式，一种是https，一种是ssh，推荐使用ssh，ssh的速度更快，并且避免了重复验证用户名和密码的麻烦）<br>这里推荐<a href=\"http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000\" target=\"_blank\" rel=\"external\">廖雪峰的git教程</a></p>\n</li>\n<li><h3 id=\"nodejs\"><a href=\"#nodejs\" class=\"headerlink\" title=\"nodejs\"></a>nodejs</h3><p>安装：<code>sudo apt install nodejs</code><br>还需安装npm(nodejs的包管理工具)：<code>sudo apt insatll npm</code><br>上面两个在windows下可以直接绑定安装<br>npm管理工具的使用：<br>升级新版npm：<code>sudo npm install npm -g</code><br>使用npm安装模块：<code>npm install module_name</code><br><strong>安装hexo包：<code>npm install hexo-cli -g</code></strong><br>查看所有全局安装的npm模块：<code>npm ls -g</code><br>模块的卸载：<code>npm uninstall module_name</code><br>更新模块：<code>npm update module_name</code><br>但是使用npm安装模块时速度太慢，可以使用淘宝镜像或者请科学上网。<a href=\"https://github.com/getlantern/lantern\" target=\"_blank\" rel=\"external\">lantern</a></p>\n</li>\n<li><h3 id=\"github\"><a href=\"#github\" class=\"headerlink\" title=\"github\"></a>github</h3>1.注册一个github账户，成为轮子哥口中所谓的（re）poer。<br>2.打开个人的profile，点击右上角的<strong>+</strong>，new一个repository（新建一个仓库），注意，要将你的repository name设置为[username.github.io]，这一步很重要。然后其它的不用管，直接create repository。<br>3.配置ssh keys，在settings中打开SSH and GPG keys，new一个ssh key。在下面的输入框中填写的你本机的ssh公钥，使用<code>ssh-keygen -t rsa -C &quot;youremail&quot;</code>，在你的用户目录下找到.ssh目录中的id_rsa.pub的内容，也就是你本机ssh公钥，然后点击添加。可以使用<code>cat id_rsa.pub</code>查看其中的内容。<br>4.验证：<code>ssh -T git@github.com</code>，看到successfully就说明配置完成了。</li>\n</ul>\n<h2 id=\"常用指令\"><a href=\"#常用指令\" class=\"headerlink\" title=\"常用指令\"></a>常用指令</h2><ul>\n<li><strong>新建博客项目，默认为指定的folder文件夹;</strong><br><code>hexo init [folder]</code></li>\n<li><strong>新建文章，总共有post、draft、page三种layout，文章以你指定的title名创建，title中如果有空格请使用“”括起来;</strong><br><code>hexo new [layout] &lt;title&gt;</code></li>\n<li><strong>生成静态文件，下面的代码为简写，可以添加-w参数监视文件的变动;</strong><br><code>hexo generate</code><br><code>hexo g</code></li>\n<li><strong>启动本地服务器，可以添加参数-p指定服务器的端口，默认在端口4000</strong><br><code>hexo server</code><br><code>hexo s</code></li>\n<li><strong>博客项目部署</strong><br><code>hexo deploy</code><br><code>hexo d</code></li>\n<li><strong>一键静态文件生成与部署</strong><br><code>hexo g -d</code><br><code>hexo d -g</code></li>\n<li><strong>清楚缓存和生成的静态文件，对应于db.json和public目录下的文件</strong><br><code>hexo clean</code><br><code>hexo cl</code></li>\n<li><strong>列出博客文件树</strong><br><code>hexo list route</code></li>\n</ul>\n","excerpt":"<p>以下试用ubuntu下利用github pages搭建hexo博客，windows下流程与此类似，可以作参考。</p>\n<h2 id=\"环境搭建\"><a href=\"#环境搭建\" class=\"headerlink\" title=\"环境搭建\"></a>环境搭建</h2><ul>\n<li><h3 id=\"git\"><a href=\"#git\" class=\"headerlink\" title=\"git\"></a>git</h3><p>首先需要在系统中安装git：<code>sudo apt install git</code><br>可以先检查是否安装git：<code>git --version</code></p>","more":"<p>然后是对git的一些基本配置：<br><code>git config --global user.name &quot;username&quot;</code><br><code>git config --global user.email &quot;youremail&quot;</code><br>对于使用hexo你不需要太多的git技巧，还有要用到的git命令：<br><code>git clone repo_url</code>（这里的仓库地址有两种形式，一种是https，一种是ssh，推荐使用ssh，ssh的速度更快，并且避免了重复验证用户名和密码的麻烦）<br>这里推荐<a href=\"http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000\">廖雪峰的git教程</a></p>\n</li>\n<li><h3 id=\"nodejs\"><a href=\"#nodejs\" class=\"headerlink\" title=\"nodejs\"></a>nodejs</h3><p>安装：<code>sudo apt install nodejs</code><br>还需安装npm(nodejs的包管理工具)：<code>sudo apt insatll npm</code><br>上面两个在windows下可以直接绑定安装<br>npm管理工具的使用：<br>升级新版npm：<code>sudo npm install npm -g</code><br>使用npm安装模块：<code>npm install module_name</code><br><strong>安装hexo包：<code>npm install hexo-cli -g</code></strong><br>查看所有全局安装的npm模块：<code>npm ls -g</code><br>模块的卸载：<code>npm uninstall module_name</code><br>更新模块：<code>npm update module_name</code><br>但是使用npm安装模块时速度太慢，可以使用淘宝镜像或者请科学上网。<a href=\"https://github.com/getlantern/lantern\">lantern</a></p>\n</li>\n<li><h3 id=\"github\"><a href=\"#github\" class=\"headerlink\" title=\"github\"></a>github</h3>1.注册一个github账户，成为轮子哥口中所谓的（re）poer。<br>2.打开个人的profile，点击右上角的<strong>+</strong>，new一个repository（新建一个仓库），注意，要将你的repository name设置为[username.github.io]，这一步很重要。然后其它的不用管，直接create repository。<br>3.配置ssh keys，在settings中打开SSH and GPG keys，new一个ssh key。在下面的输入框中填写的你本机的ssh公钥，使用<code>ssh-keygen -t rsa -C &quot;youremail&quot;</code>，在你的用户目录下找到.ssh目录中的id_rsa.pub的内容，也就是你本机ssh公钥，然后点击添加。可以使用<code>cat id_rsa.pub</code>查看其中的内容。<br>4.验证：<code>ssh -T git@github.com</code>，看到successfully就说明配置完成了。</li>\n</ul>\n<h2 id=\"常用指令\"><a href=\"#常用指令\" class=\"headerlink\" title=\"常用指令\"></a>常用指令</h2><ul>\n<li><strong>新建博客项目，默认为指定的folder文件夹;</strong><br><code>hexo init [folder]</code></li>\n<li><strong>新建文章，总共有post、draft、page三种layout，文章以你指定的title名创建，title中如果有空格请使用“”括起来;</strong><br><code>hexo new [layout] &lt;title&gt;</code></li>\n<li><strong>生成静态文件，下面的代码为简写，可以添加-w参数监视文件的变动;</strong><br><code>hexo generate</code><br><code>hexo g</code></li>\n<li><strong>启动本地服务器，可以添加参数-p指定服务器的端口，默认在端口4000</strong><br><code>hexo server</code><br><code>hexo s</code></li>\n<li><strong>博客项目部署</strong><br><code>hexo deploy</code><br><code>hexo d</code></li>\n<li><strong>一键静态文件生成与部署</strong><br><code>hexo g -d</code><br><code>hexo d -g</code></li>\n<li><strong>清楚缓存和生成的静态文件，对应于db.json和public目录下的文件</strong><br><code>hexo clean</code><br><code>hexo cl</code></li>\n<li><strong>列出博客文件树</strong><br><code>hexo list route</code></li>\n</ul>"},{"title":"java中的垃圾回收与内存分配","date":"2016-10-15T07:44:08.000Z","_content":"java中GC涉及到java内存的分配与回收管理。虽然jvm承诺自动回收java的内存，但是java依然会出现内存的泄漏，也就是一些无用的内存无法回收的问题。由于java程序员无法直接控制jvm回收无用内存，即便是调用`System.gc()`，也只是建议jvm实施垃圾回收，但是具体的回收过程还是无法立即实现。由于盏内存随着方法的结束被回收，而且栈内存大小一般在运行期间就已经确定，所以这里涉及到的主要是堆内存的回收与分配。\n<!--more-->\n### 回收机制\n1.当某个对象处于不可达的状态，也就是没有任何的引用指向该对象，便会准备回收该对象的内存；\n2.jvm要清理、分配内存，整理回收过程中产生的内存碎片。\n\n### 垃圾回收的基本算法\njava虚拟机在执行垃圾回收时，会判断每个对象所处的状态，依据其存在时间的长短，将其分为Young、Old、Permanent，对不同代的对象执行的回收算法也不相一致。\n1.绝大多数的对象不会被长时间的引用，这些对象在年轻代就被回收。针对年轻代的对象，虚拟机会开辟一个Eden区和两个Survivor区，其中Eden区存放着绝大多数的年轻对象，有些较大的年轻对象则直接存放到Old代的内存区，而两个Survivor区中有一个区存放对象,这个区中的年轻代的对象至少经历过一次回收，另一个区是空的。对于年轻代的对象采用的是复制算法（copying），具体来讲就是当年轻代所占用的空间快要占满时，判断年轻代中在Eden和Survivor区中可达的对象，将其存放到另一个空的Survivor区中，然后对Eden和Survivor区中的空间进行清理，将它们的内存回收作为新的Eden和Survivor区。默认的Eden和Survivor区的大小的比例为`32:1`。\n2.对于年轻代中多次回收任然可达的对象，将被存入Old代内存区。Old代需要的空间更大，并且由于Old代的对象一般存活的时间很长，不需要多次执行回收，所以其一般采用标记压缩（mark-sweep-compact）的回收算法。具体来讲就是，当这部分空间快要占满时，将Old代的可达对像逐个进行标记，将不可达的对象回收，然后将可达的对象空间进行压缩，等有新的对象存入时，存放在空间的尾端。\n3.Permanent代空间用于装载Class、Method的信息，默认是64M，通常不会执行回收，除非程序结束，随类的创建而加载。\n\n### 垃圾回收的相关选项\n\n```\n-Xmx: 堆内存最大容量\n-Xms: 堆初始容量\n-XX:MinHeapFreeRatio=size 堆内存最小空闲百分比\n-XX:MaxHeapFreeRatio=size 堆内存最大空闲百分比\n-XX:NewRatio=size　年轻代和年老代内存空间比\n-XX:NewSize=size　年轻代内存默认容量\n-XX:SurvivorRatio=size　Eden和Survivor空间的比例\n-XX:MaxNewSize=size　年轻代最大容量\n-XX:PermSize=size　持久代默认容量\n-XX:MaxPermSize=size　持久代最大容量\n```\n\n### 回收器\n1.串行回收器(Serial Collector)开辟一个单线程来进行内存的回收（单核CPU）,而并行回收器开辟多个线程进行回收(多核CPU),并行回收在运行是消耗更大，但是效率更高。在对年老代对象进行的是串行回收，而年轻代的回收则取决于具体服务器的核心数目。\n配置使用：\n```\n-XX:+Use SerialGC 使用串行GC回收器\n-XX:+Use ParallelGC　使用并行GC回收器\n-XX:ParallelGCThreads=size　配置并行GC回收器线程数目\n```\n2.java5.0之后引入并行压缩回收器，年轻代对象处理方式不变，将Old代对象分成了密集区与非密集区分别处理。\n配置使用：\n```\n-XX:+Use ParallelOldGC　使用并行GC\n-XX:ParallelOldGCThreads=size　配置并行GC线程数目\n```\n3.并发标识清理（Mark-Sweep CMS）\n并行处理GC不会出现程序暂停，而并发处理会引起程序短暂的暂停。由于CMS回收对象不压缩，所以其处理的空间不连续，间接地导致内存分配的效率下降。\n\n### 内存管理小技巧\n1.使用String和基本类的包装类时使用直接量，尽量不使用new操作符创建对象；\n2.使用StringBuilder和StringBuffer来操作字符串的连接操作；\n3.尽早释放无用的对象（obj=null）；\n4.尽量少用静态变量；\n5.避免循环创建对象；\n6.缓存经常使用的对象，可以利用数据连接池、HashMap等；\n7.尽量不使用finalize，这样会增加GC的负担；\n8.可以使用软引用；","source":"_posts/javaGC01.md","raw":"---\ntitle: java中的垃圾回收与内存分配\ndate: 2016-10-15 15:44:08\ntags: GC\ncategories: JavaSE\n---\njava中GC涉及到java内存的分配与回收管理。虽然jvm承诺自动回收java的内存，但是java依然会出现内存的泄漏，也就是一些无用的内存无法回收的问题。由于java程序员无法直接控制jvm回收无用内存，即便是调用`System.gc()`，也只是建议jvm实施垃圾回收，但是具体的回收过程还是无法立即实现。由于盏内存随着方法的结束被回收，而且栈内存大小一般在运行期间就已经确定，所以这里涉及到的主要是堆内存的回收与分配。\n<!--more-->\n### 回收机制\n1.当某个对象处于不可达的状态，也就是没有任何的引用指向该对象，便会准备回收该对象的内存；\n2.jvm要清理、分配内存，整理回收过程中产生的内存碎片。\n\n### 垃圾回收的基本算法\njava虚拟机在执行垃圾回收时，会判断每个对象所处的状态，依据其存在时间的长短，将其分为Young、Old、Permanent，对不同代的对象执行的回收算法也不相一致。\n1.绝大多数的对象不会被长时间的引用，这些对象在年轻代就被回收。针对年轻代的对象，虚拟机会开辟一个Eden区和两个Survivor区，其中Eden区存放着绝大多数的年轻对象，有些较大的年轻对象则直接存放到Old代的内存区，而两个Survivor区中有一个区存放对象,这个区中的年轻代的对象至少经历过一次回收，另一个区是空的。对于年轻代的对象采用的是复制算法（copying），具体来讲就是当年轻代所占用的空间快要占满时，判断年轻代中在Eden和Survivor区中可达的对象，将其存放到另一个空的Survivor区中，然后对Eden和Survivor区中的空间进行清理，将它们的内存回收作为新的Eden和Survivor区。默认的Eden和Survivor区的大小的比例为`32:1`。\n2.对于年轻代中多次回收任然可达的对象，将被存入Old代内存区。Old代需要的空间更大，并且由于Old代的对象一般存活的时间很长，不需要多次执行回收，所以其一般采用标记压缩（mark-sweep-compact）的回收算法。具体来讲就是，当这部分空间快要占满时，将Old代的可达对像逐个进行标记，将不可达的对象回收，然后将可达的对象空间进行压缩，等有新的对象存入时，存放在空间的尾端。\n3.Permanent代空间用于装载Class、Method的信息，默认是64M，通常不会执行回收，除非程序结束，随类的创建而加载。\n\n### 垃圾回收的相关选项\n\n```\n-Xmx: 堆内存最大容量\n-Xms: 堆初始容量\n-XX:MinHeapFreeRatio=size 堆内存最小空闲百分比\n-XX:MaxHeapFreeRatio=size 堆内存最大空闲百分比\n-XX:NewRatio=size　年轻代和年老代内存空间比\n-XX:NewSize=size　年轻代内存默认容量\n-XX:SurvivorRatio=size　Eden和Survivor空间的比例\n-XX:MaxNewSize=size　年轻代最大容量\n-XX:PermSize=size　持久代默认容量\n-XX:MaxPermSize=size　持久代最大容量\n```\n\n### 回收器\n1.串行回收器(Serial Collector)开辟一个单线程来进行内存的回收（单核CPU）,而并行回收器开辟多个线程进行回收(多核CPU),并行回收在运行是消耗更大，但是效率更高。在对年老代对象进行的是串行回收，而年轻代的回收则取决于具体服务器的核心数目。\n配置使用：\n```\n-XX:+Use SerialGC 使用串行GC回收器\n-XX:+Use ParallelGC　使用并行GC回收器\n-XX:ParallelGCThreads=size　配置并行GC回收器线程数目\n```\n2.java5.0之后引入并行压缩回收器，年轻代对象处理方式不变，将Old代对象分成了密集区与非密集区分别处理。\n配置使用：\n```\n-XX:+Use ParallelOldGC　使用并行GC\n-XX:ParallelOldGCThreads=size　配置并行GC线程数目\n```\n3.并发标识清理（Mark-Sweep CMS）\n并行处理GC不会出现程序暂停，而并发处理会引起程序短暂的暂停。由于CMS回收对象不压缩，所以其处理的空间不连续，间接地导致内存分配的效率下降。\n\n### 内存管理小技巧\n1.使用String和基本类的包装类时使用直接量，尽量不使用new操作符创建对象；\n2.使用StringBuilder和StringBuffer来操作字符串的连接操作；\n3.尽早释放无用的对象（obj=null）；\n4.尽量少用静态变量；\n5.避免循环创建对象；\n6.缓存经常使用的对象，可以利用数据连接池、HashMap等；\n7.尽量不使用finalize，这样会增加GC的负担；\n8.可以使用软引用；","slug":"javaGC01","published":1,"updated":"2016-10-20T03:42:36.633Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciuhsytcv0009hlptxx8gl3xf","content":"<p>java中GC涉及到java内存的分配与回收管理。虽然jvm承诺自动回收java的内存，但是java依然会出现内存的泄漏，也就是一些无用的内存无法回收的问题。由于java程序员无法直接控制jvm回收无用内存，即便是调用<code>System.gc()</code>，也只是建议jvm实施垃圾回收，但是具体的回收过程还是无法立即实现。由于盏内存随着方法的结束被回收，而且栈内存大小一般在运行期间就已经确定，所以这里涉及到的主要是堆内存的回收与分配。<br><a id=\"more\"></a></p>\n<h3 id=\"回收机制\"><a href=\"#回收机制\" class=\"headerlink\" title=\"回收机制\"></a>回收机制</h3><p>1.当某个对象处于不可达的状态，也就是没有任何的引用指向该对象，便会准备回收该对象的内存；<br>2.jvm要清理、分配内存，整理回收过程中产生的内存碎片。</p>\n<h3 id=\"垃圾回收的基本算法\"><a href=\"#垃圾回收的基本算法\" class=\"headerlink\" title=\"垃圾回收的基本算法\"></a>垃圾回收的基本算法</h3><p>java虚拟机在执行垃圾回收时，会判断每个对象所处的状态，依据其存在时间的长短，将其分为Young、Old、Permanent，对不同代的对象执行的回收算法也不相一致。<br>1.绝大多数的对象不会被长时间的引用，这些对象在年轻代就被回收。针对年轻代的对象，虚拟机会开辟一个Eden区和两个Survivor区，其中Eden区存放着绝大多数的年轻对象，有些较大的年轻对象则直接存放到Old代的内存区，而两个Survivor区中有一个区存放对象,这个区中的年轻代的对象至少经历过一次回收，另一个区是空的。对于年轻代的对象采用的是复制算法（copying），具体来讲就是当年轻代所占用的空间快要占满时，判断年轻代中在Eden和Survivor区中可达的对象，将其存放到另一个空的Survivor区中，然后对Eden和Survivor区中的空间进行清理，将它们的内存回收作为新的Eden和Survivor区。默认的Eden和Survivor区的大小的比例为<code>32:1</code>。<br>2.对于年轻代中多次回收任然可达的对象，将被存入Old代内存区。Old代需要的空间更大，并且由于Old代的对象一般存活的时间很长，不需要多次执行回收，所以其一般采用标记压缩（mark-sweep-compact）的回收算法。具体来讲就是，当这部分空间快要占满时，将Old代的可达对像逐个进行标记，将不可达的对象回收，然后将可达的对象空间进行压缩，等有新的对象存入时，存放在空间的尾端。<br>3.Permanent代空间用于装载Class、Method的信息，默认是64M，通常不会执行回收，除非程序结束，随类的创建而加载。</p>\n<h3 id=\"垃圾回收的相关选项\"><a href=\"#垃圾回收的相关选项\" class=\"headerlink\" title=\"垃圾回收的相关选项\"></a>垃圾回收的相关选项</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">-Xmx: 堆内存最大容量</div><div class=\"line\">-Xms: 堆初始容量</div><div class=\"line\">-XX:MinHeapFreeRatio=size 堆内存最小空闲百分比</div><div class=\"line\">-XX:MaxHeapFreeRatio=size 堆内存最大空闲百分比</div><div class=\"line\">-XX:NewRatio=size　年轻代和年老代内存空间比</div><div class=\"line\">-XX:NewSize=size　年轻代内存默认容量</div><div class=\"line\">-XX:SurvivorRatio=size　Eden和Survivor空间的比例</div><div class=\"line\">-XX:MaxNewSize=size　年轻代最大容量</div><div class=\"line\">-XX:PermSize=size　持久代默认容量</div><div class=\"line\">-XX:MaxPermSize=size　持久代最大容量</div></pre></td></tr></table></figure>\n<h3 id=\"回收器\"><a href=\"#回收器\" class=\"headerlink\" title=\"回收器\"></a>回收器</h3><p>1.串行回收器(Serial Collector)开辟一个单线程来进行内存的回收（单核CPU）,而并行回收器开辟多个线程进行回收(多核CPU),并行回收在运行是消耗更大，但是效率更高。在对年老代对象进行的是串行回收，而年轻代的回收则取决于具体服务器的核心数目。<br>配置使用：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">-XX:+Use SerialGC 使用串行GC回收器</div><div class=\"line\">-XX:+Use ParallelGC　使用并行GC回收器</div><div class=\"line\">-XX:ParallelGCThreads=size　配置并行GC回收器线程数目</div></pre></td></tr></table></figure></p>\n<p>2.java5.0之后引入并行压缩回收器，年轻代对象处理方式不变，将Old代对象分成了密集区与非密集区分别处理。<br>配置使用：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">-XX:+Use ParallelOldGC　使用并行GC</div><div class=\"line\">-XX:ParallelOldGCThreads=size　配置并行GC线程数目</div></pre></td></tr></table></figure></p>\n<p>3.并发标识清理（Mark-Sweep CMS）<br>并行处理GC不会出现程序暂停，而并发处理会引起程序短暂的暂停。由于CMS回收对象不压缩，所以其处理的空间不连续，间接地导致内存分配的效率下降。</p>\n<h3 id=\"内存管理小技巧\"><a href=\"#内存管理小技巧\" class=\"headerlink\" title=\"内存管理小技巧\"></a>内存管理小技巧</h3><p>1.使用String和基本类的包装类时使用直接量，尽量不使用new操作符创建对象；<br>2.使用StringBuilder和StringBuffer来操作字符串的连接操作；<br>3.尽早释放无用的对象（obj=null）；<br>4.尽量少用静态变量；<br>5.避免循环创建对象；<br>6.缓存经常使用的对象，可以利用数据连接池、HashMap等；<br>7.尽量不使用finalize，这样会增加GC的负担；<br>8.可以使用软引用；</p>\n","excerpt":"<p>java中GC涉及到java内存的分配与回收管理。虽然jvm承诺自动回收java的内存，但是java依然会出现内存的泄漏，也就是一些无用的内存无法回收的问题。由于java程序员无法直接控制jvm回收无用内存，即便是调用<code>System.gc()</code>，也只是建议jvm实施垃圾回收，但是具体的回收过程还是无法立即实现。由于盏内存随着方法的结束被回收，而且栈内存大小一般在运行期间就已经确定，所以这里涉及到的主要是堆内存的回收与分配。<br>","more":"</p>\n<h3 id=\"回收机制\"><a href=\"#回收机制\" class=\"headerlink\" title=\"回收机制\"></a>回收机制</h3><p>1.当某个对象处于不可达的状态，也就是没有任何的引用指向该对象，便会准备回收该对象的内存；<br>2.jvm要清理、分配内存，整理回收过程中产生的内存碎片。</p>\n<h3 id=\"垃圾回收的基本算法\"><a href=\"#垃圾回收的基本算法\" class=\"headerlink\" title=\"垃圾回收的基本算法\"></a>垃圾回收的基本算法</h3><p>java虚拟机在执行垃圾回收时，会判断每个对象所处的状态，依据其存在时间的长短，将其分为Young、Old、Permanent，对不同代的对象执行的回收算法也不相一致。<br>1.绝大多数的对象不会被长时间的引用，这些对象在年轻代就被回收。针对年轻代的对象，虚拟机会开辟一个Eden区和两个Survivor区，其中Eden区存放着绝大多数的年轻对象，有些较大的年轻对象则直接存放到Old代的内存区，而两个Survivor区中有一个区存放对象,这个区中的年轻代的对象至少经历过一次回收，另一个区是空的。对于年轻代的对象采用的是复制算法（copying），具体来讲就是当年轻代所占用的空间快要占满时，判断年轻代中在Eden和Survivor区中可达的对象，将其存放到另一个空的Survivor区中，然后对Eden和Survivor区中的空间进行清理，将它们的内存回收作为新的Eden和Survivor区。默认的Eden和Survivor区的大小的比例为<code>32:1</code>。<br>2.对于年轻代中多次回收任然可达的对象，将被存入Old代内存区。Old代需要的空间更大，并且由于Old代的对象一般存活的时间很长，不需要多次执行回收，所以其一般采用标记压缩（mark-sweep-compact）的回收算法。具体来讲就是，当这部分空间快要占满时，将Old代的可达对像逐个进行标记，将不可达的对象回收，然后将可达的对象空间进行压缩，等有新的对象存入时，存放在空间的尾端。<br>3.Permanent代空间用于装载Class、Method的信息，默认是64M，通常不会执行回收，除非程序结束，随类的创建而加载。</p>\n<h3 id=\"垃圾回收的相关选项\"><a href=\"#垃圾回收的相关选项\" class=\"headerlink\" title=\"垃圾回收的相关选项\"></a>垃圾回收的相关选项</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">-Xmx: 堆内存最大容量</div><div class=\"line\">-Xms: 堆初始容量</div><div class=\"line\">-XX:MinHeapFreeRatio=size 堆内存最小空闲百分比</div><div class=\"line\">-XX:MaxHeapFreeRatio=size 堆内存最大空闲百分比</div><div class=\"line\">-XX:NewRatio=size　年轻代和年老代内存空间比</div><div class=\"line\">-XX:NewSize=size　年轻代内存默认容量</div><div class=\"line\">-XX:SurvivorRatio=size　Eden和Survivor空间的比例</div><div class=\"line\">-XX:MaxNewSize=size　年轻代最大容量</div><div class=\"line\">-XX:PermSize=size　持久代默认容量</div><div class=\"line\">-XX:MaxPermSize=size　持久代最大容量</div></pre></td></tr></table></figure>\n<h3 id=\"回收器\"><a href=\"#回收器\" class=\"headerlink\" title=\"回收器\"></a>回收器</h3><p>1.串行回收器(Serial Collector)开辟一个单线程来进行内存的回收（单核CPU）,而并行回收器开辟多个线程进行回收(多核CPU),并行回收在运行是消耗更大，但是效率更高。在对年老代对象进行的是串行回收，而年轻代的回收则取决于具体服务器的核心数目。<br>配置使用：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">-XX:+Use SerialGC 使用串行GC回收器</div><div class=\"line\">-XX:+Use ParallelGC　使用并行GC回收器</div><div class=\"line\">-XX:ParallelGCThreads=size　配置并行GC回收器线程数目</div></pre></td></tr></table></figure></p>\n<p>2.java5.0之后引入并行压缩回收器，年轻代对象处理方式不变，将Old代对象分成了密集区与非密集区分别处理。<br>配置使用：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">-XX:+Use ParallelOldGC　使用并行GC</div><div class=\"line\">-XX:ParallelOldGCThreads=size　配置并行GC线程数目</div></pre></td></tr></table></figure></p>\n<p>3.并发标识清理（Mark-Sweep CMS）<br>并行处理GC不会出现程序暂停，而并发处理会引起程序短暂的暂停。由于CMS回收对象不压缩，所以其处理的空间不连续，间接地导致内存分配的效率下降。</p>\n<h3 id=\"内存管理小技巧\"><a href=\"#内存管理小技巧\" class=\"headerlink\" title=\"内存管理小技巧\"></a>内存管理小技巧</h3><p>1.使用String和基本类的包装类时使用直接量，尽量不使用new操作符创建对象；<br>2.使用StringBuilder和StringBuffer来操作字符串的连接操作；<br>3.尽早释放无用的对象（obj=null）；<br>4.尽量少用静态变量；<br>5.避免循环创建对象；<br>6.缓存经常使用的对象，可以利用数据连接池、HashMap等；<br>7.尽量不使用finalize，这样会增加GC的负担；<br>8.可以使用软引用；</p>"},{"title":"关于map的迭代方式","date":"2016-10-09T19:39:04.000Z","_content":"最近复习java集合框架，正好看到github上有关于java中map的迭代，本来以为熟悉的点，没想到看过去就忘记了。随即又重新打开eclipse，一边看源码，一边重新敲了一下代码。\n具体的代码如下：（正好可以测试一下hexo的语法高亮）\n<!--more-->\n```java\n//学生类\npublic class Student {\n\t\n\tprivate String name;\n\tprivate int age;\n\tprivate String school;\n\t\n\tpublic Student(){}\n\t\n\tpublic Student(String name, int age, String school) {\n\t\tsuper();\n\t\tthis.name = name;\n\t\tthis.age = age;\n\t\tthis.school = school;\n\t}\n\n\tpublic String getName() {\n\t\treturn name;\n\t}\n\n\tpublic int getAge() {\n\t\treturn age;\n\t}\n\n\tpublic String getSchool() {\n\t\treturn school;\n\t}\t\n}\n```\n\n```java\nMap<String, Student> students = new HashMap<>();\n\t\tstudents.put(\"001\", new Student(\"Kobe\", 25, \"SouthWest\"));\n\t\tstudents.put(\"002\", new Student(\"Allen\", 23, \"SouthWest\"));\n\t\tstudents.put(\"003\", new Student(\"James\", 20, \"SouthWest\"));\n\n\t\t// 使用foreach迭代\n\t\tSet<Map.Entry<String, Student>> sets = students.entrySet();\n\t\tfor (Map.Entry<String, Student> entry : sets) {\n\t\t\tSystem.out.println(\"编号：\" + entry.getKey() + \" 学生姓名：\" + entry.getValue().getName());\n\t\t}\n\t\t//分别迭代value和key\n\t\tSet<String> keys = students.keySet();\n\t\tCollection<Student> collection = students.values();\n\t\tfor(String key:keys){\n\t\t\tSystem.out.println(\"编号：\" + key);\n\t\t}\n\t\tfor(Student student:collection){\n\t\t\tSystem.out.println(\"student name:\" + student.getName() + \" student age:\" + student.getAge() + \" school:\" + student.getSchool());\n\t\t}\n\t\t//使用iterator进行迭代\n\t\tIterator<Map.Entry<String, Student>> iterator = sets.iterator();\n\t\twhile(iterator.hasNext()){\n\t\t\tMap.Entry<String, Student> student = iterator.next();\n\t\t\tSystem.out.println(\"编号：\" + student.getKey() + \" 学生姓名：\" +student.getValue().getName());\n\n```\n在迭代的过程中要涉及到泛型的一些用法，还好有IDE。\n\n记于九九重阳。","source":"_posts/mapIterator.md","raw":"---\ntitle: 关于map的迭代方式\ndate: 2016-10-10 03:39:04\ntags: [map,iterator]\ncategories: JavaSE\n---\n最近复习java集合框架，正好看到github上有关于java中map的迭代，本来以为熟悉的点，没想到看过去就忘记了。随即又重新打开eclipse，一边看源码，一边重新敲了一下代码。\n具体的代码如下：（正好可以测试一下hexo的语法高亮）\n<!--more-->\n```java\n//学生类\npublic class Student {\n\t\n\tprivate String name;\n\tprivate int age;\n\tprivate String school;\n\t\n\tpublic Student(){}\n\t\n\tpublic Student(String name, int age, String school) {\n\t\tsuper();\n\t\tthis.name = name;\n\t\tthis.age = age;\n\t\tthis.school = school;\n\t}\n\n\tpublic String getName() {\n\t\treturn name;\n\t}\n\n\tpublic int getAge() {\n\t\treturn age;\n\t}\n\n\tpublic String getSchool() {\n\t\treturn school;\n\t}\t\n}\n```\n\n```java\nMap<String, Student> students = new HashMap<>();\n\t\tstudents.put(\"001\", new Student(\"Kobe\", 25, \"SouthWest\"));\n\t\tstudents.put(\"002\", new Student(\"Allen\", 23, \"SouthWest\"));\n\t\tstudents.put(\"003\", new Student(\"James\", 20, \"SouthWest\"));\n\n\t\t// 使用foreach迭代\n\t\tSet<Map.Entry<String, Student>> sets = students.entrySet();\n\t\tfor (Map.Entry<String, Student> entry : sets) {\n\t\t\tSystem.out.println(\"编号：\" + entry.getKey() + \" 学生姓名：\" + entry.getValue().getName());\n\t\t}\n\t\t//分别迭代value和key\n\t\tSet<String> keys = students.keySet();\n\t\tCollection<Student> collection = students.values();\n\t\tfor(String key:keys){\n\t\t\tSystem.out.println(\"编号：\" + key);\n\t\t}\n\t\tfor(Student student:collection){\n\t\t\tSystem.out.println(\"student name:\" + student.getName() + \" student age:\" + student.getAge() + \" school:\" + student.getSchool());\n\t\t}\n\t\t//使用iterator进行迭代\n\t\tIterator<Map.Entry<String, Student>> iterator = sets.iterator();\n\t\twhile(iterator.hasNext()){\n\t\t\tMap.Entry<String, Student> student = iterator.next();\n\t\t\tSystem.out.println(\"编号：\" + student.getKey() + \" 学生姓名：\" +student.getValue().getName());\n\n```\n在迭代的过程中要涉及到泛型的一些用法，还好有IDE。\n\n记于九九重阳。","slug":"mapIterator","published":1,"updated":"2016-10-20T03:42:36.665Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciuhsytd5000dhlptxp4tc2k1","content":"<p>最近复习java集合框架，正好看到github上有关于java中map的迭代，本来以为熟悉的点，没想到看过去就忘记了。随即又重新打开eclipse，一边看源码，一边重新敲了一下代码。<br>具体的代码如下：（正好可以测试一下hexo的语法高亮）<br><a id=\"more\"></a><br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//学生类</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Student</span> </span>&#123;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"keyword\">private</span> String name;</div><div class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> age;</div><div class=\"line\">\t<span class=\"keyword\">private</span> String school;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Student</span><span class=\"params\">()</span></span>&#123;&#125;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Student</span><span class=\"params\">(String name, <span class=\"keyword\">int</span> age, String school)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">super</span>();</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.name = name;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.age = age;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.school = school;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getName</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> name;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getAge</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> age;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getSchool</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> school;</div><div class=\"line\">\t&#125;\t</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\">Map&lt;String, Student&gt; students = <span class=\"keyword\">new</span> HashMap&lt;&gt;();</div><div class=\"line\">\t\tstudents.put(<span class=\"string\">\"001\"</span>, <span class=\"keyword\">new</span> Student(<span class=\"string\">\"Kobe\"</span>, <span class=\"number\">25</span>, <span class=\"string\">\"SouthWest\"</span>));</div><div class=\"line\">\t\tstudents.put(<span class=\"string\">\"002\"</span>, <span class=\"keyword\">new</span> Student(<span class=\"string\">\"Allen\"</span>, <span class=\"number\">23</span>, <span class=\"string\">\"SouthWest\"</span>));</div><div class=\"line\">\t\tstudents.put(<span class=\"string\">\"003\"</span>, <span class=\"keyword\">new</span> Student(<span class=\"string\">\"James\"</span>, <span class=\"number\">20</span>, <span class=\"string\">\"SouthWest\"</span>));</div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"comment\">// 使用foreach迭代</span></div><div class=\"line\">\t\tSet&lt;Map.Entry&lt;String, Student&gt;&gt; sets = students.entrySet();</div><div class=\"line\">\t\t<span class=\"keyword\">for</span> (Map.Entry&lt;String, Student&gt; entry : sets) &#123;</div><div class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">\"编号：\"</span> + entry.getKey() + <span class=\"string\">\" 学生姓名：\"</span> + entry.getValue().getName());</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"comment\">//分别迭代value和key</span></div><div class=\"line\">\t\tSet&lt;String&gt; keys = students.keySet();</div><div class=\"line\">\t\tCollection&lt;Student&gt; collection = students.values();</div><div class=\"line\">\t\t<span class=\"keyword\">for</span>(String key:keys)&#123;</div><div class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">\"编号：\"</span> + key);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">for</span>(Student student:collection)&#123;</div><div class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">\"student name:\"</span> + student.getName() + <span class=\"string\">\" student age:\"</span> + student.getAge() + <span class=\"string\">\" school:\"</span> + student.getSchool());</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"comment\">//使用iterator进行迭代</span></div><div class=\"line\">\t\tIterator&lt;Map.Entry&lt;String, Student&gt;&gt; iterator = sets.iterator();</div><div class=\"line\">\t\t<span class=\"keyword\">while</span>(iterator.hasNext())&#123;</div><div class=\"line\">\t\t\tMap.Entry&lt;String, Student&gt; student = iterator.next();</div><div class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">\"编号：\"</span> + student.getKey() + <span class=\"string\">\" 学生姓名：\"</span> +student.getValue().getName());</div></pre></td></tr></table></figure>\n<p>在迭代的过程中要涉及到泛型的一些用法，还好有IDE。</p>\n<p>记于九九重阳。</p>\n","excerpt":"<p>最近复习java集合框架，正好看到github上有关于java中map的迭代，本来以为熟悉的点，没想到看过去就忘记了。随即又重新打开eclipse，一边看源码，一边重新敲了一下代码。<br>具体的代码如下：（正好可以测试一下hexo的语法高亮）<br>","more":"<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//学生类</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Student</span> </span>&#123;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"keyword\">private</span> String name;</div><div class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> age;</div><div class=\"line\">\t<span class=\"keyword\">private</span> String school;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Student</span><span class=\"params\">()</span></span>&#123;&#125;</div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Student</span><span class=\"params\">(String name, <span class=\"keyword\">int</span> age, String school)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">super</span>();</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.name = name;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.age = age;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.school = school;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getName</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> name;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getAge</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> age;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getSchool</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> school;</div><div class=\"line\">\t&#125;\t</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\">Map&lt;String, Student&gt; students = <span class=\"keyword\">new</span> HashMap&lt;&gt;();</div><div class=\"line\">\t\tstudents.put(<span class=\"string\">\"001\"</span>, <span class=\"keyword\">new</span> Student(<span class=\"string\">\"Kobe\"</span>, <span class=\"number\">25</span>, <span class=\"string\">\"SouthWest\"</span>));</div><div class=\"line\">\t\tstudents.put(<span class=\"string\">\"002\"</span>, <span class=\"keyword\">new</span> Student(<span class=\"string\">\"Allen\"</span>, <span class=\"number\">23</span>, <span class=\"string\">\"SouthWest\"</span>));</div><div class=\"line\">\t\tstudents.put(<span class=\"string\">\"003\"</span>, <span class=\"keyword\">new</span> Student(<span class=\"string\">\"James\"</span>, <span class=\"number\">20</span>, <span class=\"string\">\"SouthWest\"</span>));</div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"comment\">// 使用foreach迭代</span></div><div class=\"line\">\t\tSet&lt;Map.Entry&lt;String, Student&gt;&gt; sets = students.entrySet();</div><div class=\"line\">\t\t<span class=\"keyword\">for</span> (Map.Entry&lt;String, Student&gt; entry : sets) &#123;</div><div class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">\"编号：\"</span> + entry.getKey() + <span class=\"string\">\" 学生姓名：\"</span> + entry.getValue().getName());</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"comment\">//分别迭代value和key</span></div><div class=\"line\">\t\tSet&lt;String&gt; keys = students.keySet();</div><div class=\"line\">\t\tCollection&lt;Student&gt; collection = students.values();</div><div class=\"line\">\t\t<span class=\"keyword\">for</span>(String key:keys)&#123;</div><div class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">\"编号：\"</span> + key);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">for</span>(Student student:collection)&#123;</div><div class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">\"student name:\"</span> + student.getName() + <span class=\"string\">\" student age:\"</span> + student.getAge() + <span class=\"string\">\" school:\"</span> + student.getSchool());</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"comment\">//使用iterator进行迭代</span></div><div class=\"line\">\t\tIterator&lt;Map.Entry&lt;String, Student&gt;&gt; iterator = sets.iterator();</div><div class=\"line\">\t\t<span class=\"keyword\">while</span>(iterator.hasNext())&#123;</div><div class=\"line\">\t\t\tMap.Entry&lt;String, Student&gt; student = iterator.next();</div><div class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">\"编号：\"</span> + student.getKey() + <span class=\"string\">\" 学生姓名：\"</span> +student.getValue().getName());</div></pre></td></tr></table></figure>\n<p>在迭代的过程中要涉及到泛型的一些用法，还好有IDE。</p>\n<p>记于九九重阳。</p>"},{"title":"读小王子","date":"2016-10-04T03:04:28.000Z","_content":"最近在读小王子，断断续续，很早以前就翻看，但是最近才觉得可以好好的欣赏这像童话一般的文字。有人说“孤独时看小王子”，或许最近的日子多彩却孤单。\n<!--more-->\n以下是书摘：\n> “勇往直前，谁也走不出多远的……”\n> \"忘记朋友是悲哀的。并不是所有人都有过朋友的。\"\n> \"我的朋友，从来也不加以解释的。他也许认为我跟他一样的。可是，很不幸，我却不能透过盒子见绵羊。我大概有点像大人了。我总得长大的啊。\"\n> \"若有人爱上了开在亿万星星上的一株花，那么看着星星就足以使他感到幸福。\"\n> “对我来说，你还只是个小男孩，和千千万万小男孩都一样。我不需要你。你也不需要我。对你来说，我也不过是只狐狸，和千千万万狐狸都一样。但是，如果你驯养了我，我们就互相需要了。对我来说，你就是世界上唯一的了；我对你来说，也是世界上唯一的了……”\n\n读着这些文字，莫名感到悲伤。","source":"_posts/readLittlePrince.md","raw":"---\ntitle: 读小王子\ndate: 2016-10-04 11:04:28\ntags: reading books\n---\n最近在读小王子，断断续续，很早以前就翻看，但是最近才觉得可以好好的欣赏这像童话一般的文字。有人说“孤独时看小王子”，或许最近的日子多彩却孤单。\n<!--more-->\n以下是书摘：\n> “勇往直前，谁也走不出多远的……”\n> \"忘记朋友是悲哀的。并不是所有人都有过朋友的。\"\n> \"我的朋友，从来也不加以解释的。他也许认为我跟他一样的。可是，很不幸，我却不能透过盒子见绵羊。我大概有点像大人了。我总得长大的啊。\"\n> \"若有人爱上了开在亿万星星上的一株花，那么看着星星就足以使他感到幸福。\"\n> “对我来说，你还只是个小男孩，和千千万万小男孩都一样。我不需要你。你也不需要我。对你来说，我也不过是只狐狸，和千千万万狐狸都一样。但是，如果你驯养了我，我们就互相需要了。对我来说，你就是世界上唯一的了；我对你来说，也是世界上唯一的了……”\n\n读着这些文字，莫名感到悲伤。","slug":"readLittlePrince","published":1,"updated":"2016-10-20T03:42:36.669Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciuhsytd9000fhlpt63hh26c3","content":"<p>最近在读小王子，断断续续，很早以前就翻看，但是最近才觉得可以好好的欣赏这像童话一般的文字。有人说“孤独时看小王子”，或许最近的日子多彩却孤单。<br><a id=\"more\"></a><br>以下是书摘：</p>\n<blockquote>\n<p>“勇往直前，谁也走不出多远的……”<br>“忘记朋友是悲哀的。并不是所有人都有过朋友的。”<br>“我的朋友，从来也不加以解释的。他也许认为我跟他一样的。可是，很不幸，我却不能透过盒子见绵羊。我大概有点像大人了。我总得长大的啊。”<br>“若有人爱上了开在亿万星星上的一株花，那么看着星星就足以使他感到幸福。”<br>“对我来说，你还只是个小男孩，和千千万万小男孩都一样。我不需要你。你也不需要我。对你来说，我也不过是只狐狸，和千千万万狐狸都一样。但是，如果你驯养了我，我们就互相需要了。对我来说，你就是世界上唯一的了；我对你来说，也是世界上唯一的了……”</p>\n</blockquote>\n<p>读着这些文字，莫名感到悲伤。</p>\n","excerpt":"<p>最近在读小王子，断断续续，很早以前就翻看，但是最近才觉得可以好好的欣赏这像童话一般的文字。有人说“孤独时看小王子”，或许最近的日子多彩却孤单。<br>","more":"<br>以下是书摘：</p>\n<blockquote>\n<p>“勇往直前，谁也走不出多远的……”<br>“忘记朋友是悲哀的。并不是所有人都有过朋友的。”<br>“我的朋友，从来也不加以解释的。他也许认为我跟他一样的。可是，很不幸，我却不能透过盒子见绵羊。我大概有点像大人了。我总得长大的啊。”<br>“若有人爱上了开在亿万星星上的一株花，那么看着星星就足以使他感到幸福。”<br>“对我来说，你还只是个小男孩，和千千万万小男孩都一样。我不需要你。你也不需要我。对你来说，我也不过是只狐狸，和千千万万狐狸都一样。但是，如果你驯养了我，我们就互相需要了。对我来说，你就是世界上唯一的了；我对你来说，也是世界上唯一的了……”</p>\n</blockquote>\n<p>读着这些文字，莫名感到悲伤。</p>"},{"title":"如何得到一个字符串SHA1值","date":"2016-10-15T09:43:06.000Z","_content":"\n今天饶有兴致地想去尝试一下微信公众号的开发，遇到这样一个问题，接入开发模式需要生成一个SHA1的消息摘要。下面是在stack owerflow上看到的实现：\n```java\nString str = \"Hello\";\nMessageDigest md = MessageDigest.getInstance(\"SHA\");//此处可以指定的值为SHA、MD5\nmd.update(str.getBytes());\nbyte[] bs = md.digest();\nBigInteger bigInteger = new BigInteger(1,bs);\nString hashtext = bigInteger.toString(16);\nSystem.out.println(hashtext);\n```","source":"_posts/sha1.md","raw":"---\ntitle: 如何得到一个字符串SHA1值\ndate: 2016-10-15 17:43:06\ntags: sha1\ncategories: JavaSE\n---\n\n今天饶有兴致地想去尝试一下微信公众号的开发，遇到这样一个问题，接入开发模式需要生成一个SHA1的消息摘要。下面是在stack owerflow上看到的实现：\n```java\nString str = \"Hello\";\nMessageDigest md = MessageDigest.getInstance(\"SHA\");//此处可以指定的值为SHA、MD5\nmd.update(str.getBytes());\nbyte[] bs = md.digest();\nBigInteger bigInteger = new BigInteger(1,bs);\nString hashtext = bigInteger.toString(16);\nSystem.out.println(hashtext);\n```","slug":"sha1","published":1,"updated":"2016-10-20T03:42:36.681Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciuhsytde000jhlpt68c7ikop","content":"<p>今天饶有兴致地想去尝试一下微信公众号的开发，遇到这样一个问题，接入开发模式需要生成一个SHA1的消息摘要。下面是在stack owerflow上看到的实现：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">String str = <span class=\"string\">\"Hello\"</span>;</div><div class=\"line\">MessageDigest md = MessageDigest.getInstance(<span class=\"string\">\"SHA\"</span>);<span class=\"comment\">//此处可以指定的值为SHA、MD5</span></div><div class=\"line\">md.update(str.getBytes());</div><div class=\"line\"><span class=\"keyword\">byte</span>[] bs = md.digest();</div><div class=\"line\">BigInteger bigInteger = <span class=\"keyword\">new</span> BigInteger(<span class=\"number\">1</span>,bs);</div><div class=\"line\">String hashtext = bigInteger.toString(<span class=\"number\">16</span>);</div><div class=\"line\">System.out.println(hashtext);</div></pre></td></tr></table></figure></p>\n","excerpt":"","more":"<p>今天饶有兴致地想去尝试一下微信公众号的开发，遇到这样一个问题，接入开发模式需要生成一个SHA1的消息摘要。下面是在stack owerflow上看到的实现：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">String str = <span class=\"string\">\"Hello\"</span>;</div><div class=\"line\">MessageDigest md = MessageDigest.getInstance(<span class=\"string\">\"SHA\"</span>);<span class=\"comment\">//此处可以指定的值为SHA、MD5</span></div><div class=\"line\">md.update(str.getBytes());</div><div class=\"line\"><span class=\"keyword\">byte</span>[] bs = md.digest();</div><div class=\"line\">BigInteger bigInteger = <span class=\"keyword\">new</span> BigInteger(<span class=\"number\">1</span>,bs);</div><div class=\"line\">String hashtext = bigInteger.toString(<span class=\"number\">16</span>);</div><div class=\"line\">System.out.println(hashtext);</div></pre></td></tr></table></figure></p>\n"},{"title":"关于部署blog时重复输入用户名和密码的问题","date":"2016-10-04T13:29:42.000Z","_content":"在搭建完成hexo后，当向github部署blog时，出现了一些问题。一方面是部署的时间太漫长，另一个原因是部署的时候需要重复输入用户名和密码。利用搜索引擎进行了简单的搜索，发现是由于<!--more-->在hexo配置的时候选择的是github项目中的https链接，但是当改用ssh后，上述的两个问题便迎刃而解了。\n关于https和ssh的区别：使用https时不需要配置相关验证文件（相对而言初学时简单），多用于web访问；而ssh则需要配置一系列的验证，但是后者的优势是不需要在每次提交时重复输入用户信息进行验证，多用于文件传输。","source":"_posts/关于部署blog时重复输入用户名和密码的问题.md","raw":"---\ntitle: 关于部署blog时重复输入用户名和密码的问题\ndate: 2016-10-04 21:29:42\ntags: hexo\n---\n在搭建完成hexo后，当向github部署blog时，出现了一些问题。一方面是部署的时间太漫长，另一个原因是部署的时候需要重复输入用户名和密码。利用搜索引擎进行了简单的搜索，发现是由于<!--more-->在hexo配置的时候选择的是github项目中的https链接，但是当改用ssh后，上述的两个问题便迎刃而解了。\n关于https和ssh的区别：使用https时不需要配置相关验证文件（相对而言初学时简单），多用于web访问；而ssh则需要配置一系列的验证，但是后者的优势是不需要在每次提交时重复输入用户信息进行验证，多用于文件传输。","slug":"关于部署blog时重复输入用户名和密码的问题","published":1,"updated":"2016-10-20T03:42:36.693Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciuhsytdj000mhlpt4bkqsefa","content":"<p>在搭建完成hexo后，当向github部署blog时，出现了一些问题。一方面是部署的时间太漫长，另一个原因是部署的时候需要重复输入用户名和密码。利用搜索引擎进行了简单的搜索，发现是由于<a id=\"more\"></a>在hexo配置的时候选择的是github项目中的https链接，但是当改用ssh后，上述的两个问题便迎刃而解了。<br>关于https和ssh的区别：使用https时不需要配置相关验证文件（相对而言初学时简单），多用于web访问；而ssh则需要配置一系列的验证，但是后者的优势是不需要在每次提交时重复输入用户信息进行验证，多用于文件传输。</p>\n","excerpt":"<p>在搭建完成hexo后，当向github部署blog时，出现了一些问题。一方面是部署的时间太漫长，另一个原因是部署的时候需要重复输入用户名和密码。利用搜索引擎进行了简单的搜索，发现是由于","more":"在hexo配置的时候选择的是github项目中的https链接，但是当改用ssh后，上述的两个问题便迎刃而解了。<br>关于https和ssh的区别：使用https时不需要配置相关验证文件（相对而言初学时简单），多用于web访问；而ssh则需要配置一系列的验证，但是后者的优势是不需要在每次提交时重复输入用户信息进行验证，多用于文件传输。</p>"}],"PostAsset":[],"PostCategory":[{"post_id":"ciuhsytbg0001hlpta32eiot9","category_id":"ciuhsytc00004hlptyts1na7x","_id":"ciuhsytd7000ehlptgdt7rsg8"},{"post_id":"ciuhsytcv0009hlptxx8gl3xf","category_id":"ciuhsytc00004hlptyts1na7x","_id":"ciuhsytdd000ihlptxe0flal5"},{"post_id":"ciuhsytd5000dhlptxp4tc2k1","category_id":"ciuhsytc00004hlptyts1na7x","_id":"ciuhsytdi000lhlpt1gechs3y"},{"post_id":"ciuhsytbt0003hlptcslnlp49","category_id":"ciuhsytc00004hlptyts1na7x","_id":"ciuhsytdr000phlpt1ou0pr35"},{"post_id":"ciuhsytde000jhlpt68c7ikop","category_id":"ciuhsytc00004hlptyts1na7x","_id":"ciuhsytdt000rhlptx0pwjwhq"},{"post_id":"ciuhsytco0007hlpt4ij3r3mk","category_id":"ciuhsytda000ghlpttwe3gsde","_id":"ciuhsyte1000shlptfrxwvmc8"},{"post_id":"ciuhsytcr0008hlpt9idjtx3y","category_id":"ciuhsytdn000nhlptbt6al1an","_id":"ciuhsyte7000vhlpt43msmclx"}],"PostTag":[{"post_id":"ciuhsytbg0001hlpta32eiot9","tag_id":"ciuhsytc80005hlptzjzc104x","_id":"ciuhsytd4000chlptzv9sqe3w"},{"post_id":"ciuhsytbt0003hlptcslnlp49","tag_id":"ciuhsytd1000bhlptadw0kiof","_id":"ciuhsytdh000khlpt8a820mgb"},{"post_id":"ciuhsytco0007hlpt4ij3r3mk","tag_id":"ciuhsytdc000hhlptn68kr1sy","_id":"ciuhsytds000qhlptergrzeek"},{"post_id":"ciuhsytcr0008hlpt9idjtx3y","tag_id":"ciuhsytdq000ohlptvumay1mh","_id":"ciuhsyte4000uhlptffme54i3"},{"post_id":"ciuhsytcv0009hlptxx8gl3xf","tag_id":"ciuhsyte3000thlptra9g3mrq","_id":"ciuhsyte9000xhlptnddbdwdh"},{"post_id":"ciuhsytd5000dhlptxp4tc2k1","tag_id":"ciuhsyte8000whlpt2sypsl2e","_id":"ciuhsyteb0010hlptcxmti8c0"},{"post_id":"ciuhsytd5000dhlptxp4tc2k1","tag_id":"ciuhsytea000yhlpt9a3wpjlj","_id":"ciuhsytec0011hlptw2n9hvpa"},{"post_id":"ciuhsytd9000fhlpt63hh26c3","tag_id":"ciuhsytea000zhlptz6dr5lb8","_id":"ciuhsytef0013hlptz8rr47c1"},{"post_id":"ciuhsytde000jhlpt68c7ikop","tag_id":"ciuhsytec0012hlptchrbapwo","_id":"ciuhsytej0015hlptc04wtxn2"},{"post_id":"ciuhsytdj000mhlpt4bkqsefa","tag_id":"ciuhsytdq000ohlptvumay1mh","_id":"ciuhsytem0016hlptc4ag2x76"}],"Tag":[{"name":"Exception","_id":"ciuhsytc80005hlptzjzc104x"},{"name":"array","_id":"ciuhsytd1000bhlptadw0kiof"},{"name":"java环境变量","_id":"ciuhsytdc000hhlptn68kr1sy"},{"name":"hexo","_id":"ciuhsytdq000ohlptvumay1mh"},{"name":"GC","_id":"ciuhsyte3000thlptra9g3mrq"},{"name":"map","_id":"ciuhsyte8000whlpt2sypsl2e"},{"name":"iterator","_id":"ciuhsytea000yhlpt9a3wpjlj"},{"name":"reading books","_id":"ciuhsytea000zhlptz6dr5lb8"},{"name":"sha1","_id":"ciuhsytec0012hlptchrbapwo"}]}}